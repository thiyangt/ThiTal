<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python | THIYANGA TALAGALA</title>
    <link>https://thiyanga.netlify.app/tags/python/</link>
      <atom:link href="https://thiyanga.netlify.app/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <description>Python</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 06 Nov 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://thiyanga.netlify.app/img/icon-192.png</url>
      <title>Python</title>
      <link>https://thiyanga.netlify.app/tags/python/</link>
    </image>
    
    <item>
      <title>Building a website using Quarto</title>
      <link>https://thiyanga.netlify.app/post/blog/</link>
      <pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/blog/</guid>
      <description>


&lt;p&gt;I created &lt;a href=&#34;https://thiyanga-spatiotemporal.netlify.app/&#34;&gt;this blog&lt;/a&gt; using Quarto. Here are the steps that I used to create the blog.&lt;/p&gt;
&lt;div id=&#34;step-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 1&lt;/h2&gt;
&lt;p&gt;Install Quarto. Follow the instructions in &lt;a href=&#34;https://quarto.org/docs/get-started/&#34;&gt;this&lt;/a&gt; tutorial.&lt;/p&gt;
&lt;p&gt;On R Console install Quarto using the command&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(quarto)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 2&lt;/h2&gt;
&lt;p&gt;Create a git hub repository and create a RStudio project.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-3&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 3&lt;/h2&gt;
&lt;p&gt;The type the following command in the RStudio terminal&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;quarto create-project myblog --type website:blog&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will create a folder called &lt;code&gt;myblog&lt;/code&gt; with the following documents inside.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/quarto.PNG&#34; alt=&#34;final image&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Copy all the documents inside the folder into your project folder, and delete the &lt;code&gt;myblog&lt;/code&gt; folder.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-4&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 4&lt;/h2&gt;
&lt;p&gt;Rename &lt;code&gt;index.qmd&lt;/code&gt; to &lt;code&gt;blog.qmd&lt;/code&gt; and rename &lt;code&gt;about.qmd&lt;/code&gt; to &lt;code&gt;index.qmd&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-5&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 5&lt;/h2&gt;
&lt;p&gt;Include your details to &lt;code&gt;_quarto.yml&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-6&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 6&lt;/h2&gt;
&lt;p&gt;Click &lt;code&gt;Render&lt;/code&gt; button to preview the blog.&lt;/p&gt;
&lt;p&gt;To preview the website in the current directory type the following command in the terminal&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;quarto preview&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-7&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 7&lt;/h2&gt;
&lt;p&gt;To publish the blog with Netlify, type the following command.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;quarto publish netlify&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;other-useful-links&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Other useful links&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html&#34;&gt;https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://quarto.org/docs/publishing/netlify.htm&#34;&gt;https://quarto.org/docs/publishing/netlify.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://beamilz.com/posts/2022-06-05-creating-a-blog-with-quarto/en/&#34;&gt;https://beamilz.com/posts/2022-06-05-creating-a-blog-with-quarto/en/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Statistical Machine Learning for  Medicinal Plant Identification</title>
      <link>https://thiyanga.netlify.app/project/medlea/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/project/medlea/</guid>
      <description>&lt;h1 id=&#34;algorithm-for-leaves-classification&#34;&gt;Algorithm for leaves classification&lt;/h1&gt;
&lt;h2 id=&#34;medipi-mediicinal-plant-identification-algorithm&#34;&gt;MEDIPI (&lt;strong&gt;MEDI&lt;/strong&gt;icinal &lt;strong&gt;P&lt;/strong&gt;lant &lt;strong&gt;I&lt;/strong&gt;dentification) algorithm&lt;/h2&gt;
&lt;p&gt;Medicinal plants are usually identified by practitioners based on years of experience through
sensory or olfactory senses. The other method of recognizing these plants involves Laboratory-
based testing, which requires trained skills, data interpretation which is costly and time-intensive. Automatic ways to identify medicinal plants are useful especially for those that are lacking experience in herbal recognition. We introduce a computationally efficient new algorithm for medicinal plant classification.  We
refer to our medicinal plant classification algorithm as MEDIPI : MEDIicinal Plant
Identification. MEDIPI
contains two main phases (i) The offline phase, and (ii) The online phase. The algorithm operates on a set of interpretable features  computed from the leaf images. The offline phase of the algorithm contains 4 main steps: i) image processing, ii) feature extraction, iii) train a algorithm. Figure 1 provides an overview of our algorithm. Figure 2 provides a selected set of features we use in the algorithm. The image processing steps are shown in Figure 3.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;medipi.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 1: Overview of MEDIPI algorithm&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sh_f.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 2: Leaf image features&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image_processing.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 3: Image processing workflow&lt;/p&gt;
&lt;h1 id=&#34;benchmark-dataset-for-plant-leaves-classification&#34;&gt;Benchmark dataset for plant leaves classification&lt;/h1&gt;
&lt;p&gt;Researchers usually struggle and spend a lot of time
establishing a database by gathering many leaf samples as raw data. By sharing our database we
provide a training/test database to other researchers to develop new algorithms or to evaluate their algorithms. Furthermore,  data
sharing encourages more connections and collaboration between scientists, which leads to better decision-making.&lt;/p&gt;
&lt;h2 id=&#34;r-software-package-medlea-medicinal-leaf&#34;&gt;R Software Package &lt;code&gt;MedLEA&lt;/code&gt;: &lt;strong&gt;Med&lt;/strong&gt;icinal &lt;strong&gt;LEA&lt;/strong&gt;f&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/SMART-Research/MedLEA&#34;&gt;MedLEA&lt;/a&gt; package provides two datasets.&lt;/p&gt;
&lt;p&gt;i) A dataset of morphological and structural features of 471 medicinal plant leaves. The features of each species are recorded by manually viewing the medicinal plant repository available at (&lt;a href=&#34;http://www.instituteofayurveda.org/plants/&#34;&gt;http://www.instituteofayurveda.org/plants/&lt;/a&gt;). For more information visit at &lt;a href=&#34;https://github.com/SMART-Research/MedLEA&#34;&gt;https://github.com/SMART-Research/MedLEA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;leaf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 4:  Some morphological characteristics of profiles&lt;/p&gt;
&lt;p&gt;ii) Leaf image data set:  A database of leaf images of medicinal plants in Sri Lanka is
not yet available. Hence, through this research, we establish a repository of medicinal
plant images. This repository contains 1099 leaf images of 31 species. There are 29-45 images per species.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;imgleaf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 5: Few samples from the MedLEA images&lt;/p&gt;
&lt;p&gt;You can get access to the data set via the MedLEA package.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;install.packages(&amp;#34;MedLEA&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;research-outputs&#34;&gt;Research outputs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Papers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2106.08077&#34;&gt;Lakshika, J. P., &amp;amp; Talagala, T. S. (2021). Computer-aided Interpretable Features for Leaf Image Classification. arXiv preprint arXiv:2106.08077.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jayani P. G. Lakshika and Thiyanga S. Talagala (2021). MedLEA: Morphological and Structural Features of Medicinal Leaves. R package version 1.0.1.
&lt;a href=&#34;https://CRAN.R-project.org/package=MedLEA&#34;&gt;https://CRAN.R-project.org/package=MedLEA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=MedLEA&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/MedLEA&#34; alt=&#34;CRAN\_Status\_Badge&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://cran.r-project.org/package=MedLEA&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/MedLEA&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;Conference talks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCqfu75XVtV4s-W5aiw1tavQ&#34;&gt;Click here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Research reproducibility&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;R codes and data to reproduce the results in the paper &amp;ldquo;Computer-aided Interpretable Features for Leaf Image Classification&amp;rdquo; available at &lt;a href=&#34;https://github.com/SMART-Research/leaffeatures_paper&#34;&gt;https://github.com/SMART-Research/leaffeatures_paper&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
