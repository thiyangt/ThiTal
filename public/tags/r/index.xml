<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | THIYANGA TALAGALA</title>
    <link>https://thiyanga.netlify.app/tags/r/</link>
      <atom:link href="https://thiyanga.netlify.app/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 02 Oct 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://thiyanga.netlify.app/img/icon-192.png</url>
      <title>R</title>
      <link>https://thiyanga.netlify.app/tags/r/</link>
    </image>
    
    <item>
      <title>My `Posit::conf 2023` Experience - A Conference of Insights, Knowledge, Connections, and Explorations</title>
      <link>https://thiyanga.netlify.app/post/posit/</link>
      <pubDate>Mon, 02 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/posit/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/positimages/cb.png&#34; alt=&#34;posit&#34; width=&#34;900&#34;/&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/positcover.png&#34; alt=&#34;posit&#34; width=&#34;900&#34;/&gt;&lt;/p&gt;
&lt;p&gt;The Posit::conf 2023 (formerly known as RStudio conference) was held in Hyatt Regency in Chicago, Illinois, USA from 16 to 20 September, 2023. This was the first conference held since the name was changed from RStudio to Posit. It was a conference full of learning, making connections, and feeling inspired. As an attendee, I had the privilege of participating in workshops, attending various events, listening to great talks, meeting talented individuals, and experiencing the empowering atmosphere of R Ladies. I am immensely grateful for &lt;a href=&#34;https://posit.co/&#34;&gt;Posit Software, PBC formerly RStudio, PBC&lt;/a&gt; for this valuable opportunity. In this blog post, I&amp;rsquo;ll share my key takeaways from each of these aspects of Posit::conf 2023.&lt;/p&gt;
&lt;img src=&#34;https://thiyanga.netlify.app/post/positimages/hexwall.png&#34; alt=&#34;posit&#34; width=&#34;900&#34;/&gt;
&lt;h1 id=&#34;safe-positive-inclusive-and-respectfu-and-welcoming-atmosphere-for-everyone&#34;&gt;Safe, positive, inclusive and respectfu and welcoming atmosphere for everyone&lt;/h1&gt;
&lt;p&gt;The conference had a code of conduct in place, which provided a safer environment by setting clear guidelines for expected behavior, ensuring that all participants feel respected, safe, included, and free from any form of harassment or discrimination. It provided a positive and welcoming atmosphere for everyone attending the event.&lt;/p&gt;
&lt;img src=&#34;https://thiyanga.netlify.app/post/positimages/codeofconduct.png&#34; alt=&#34;posit&#34; width=&#34;900&#34;/&gt;
&lt;h1 id=&#34;workshops&#34;&gt;Workshops&lt;/h1&gt;
&lt;p&gt;Big data with arrow in R&lt;/p&gt;
&lt;p&gt;Data science workflows with Posit tools: Python focus&lt;/p&gt;
&lt;h1 id=&#34;keynotes-and-talks&#34;&gt;Keynotes and Talks&lt;/h1&gt;
&lt;h1 id=&#34;r-ladies&#34;&gt;R Ladies&lt;/h1&gt;
&lt;p&gt;R Ladies, a community that promotes gender diversity in the R programming community, had a significant presence at the conference. It was inspiring to see so many talented women sharing their expertise and experiences, and it reinforced the importance of diversity in tech. R Ladies events provided excellent networking opportunities. I had the chance to connect with amazing professionals, exchange ideas, and build lasting connections.&lt;/p&gt;
&lt;img src=&#34;https://thiyanga.netlify.app/post/positimages/rladies.png&#34; alt=&#34;posit&#34; width=&#34;900&#34;/&gt;
&lt;h1 id=&#34;meeting-great-people&#34;&gt;Meeting Great People&lt;/h1&gt;
&lt;p&gt;Lastly, the people I met. The R community is filled with passionate and talented individuals who are eager to collaborate and share knowledge. Building relationships with like-minded professionals and making new friends was truly invaluable.&lt;/p&gt;
&lt;img src=&#34;https://thiyanga.netlify.app/post/positimages/os.png&#34; alt=&#34;posit&#34; width=&#34;900&#34;/&gt;
</description>
    </item>
    
    <item>
      <title>Some useful functions to wrangle with time series data</title>
      <link>https://thiyanga.netlify.app/post/tsviz/</link>
      <pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/tsviz/</guid>
      <description>


&lt;div id=&#34;creating-data-and-time-objects&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Creating data and time objects&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;lubridate&lt;/code&gt; package in R provides a set of functions for working with dates and times.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;year-month-date-ymd-function&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;year-month-date &lt;code&gt;ymd&lt;/code&gt; function&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;ymd&lt;/code&gt; function converts a character vector of dates in the format “year-month-day” to a Date object. The name of the function stands for “year-month-day”, which is the order of the components in the date format that the function expects.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(lubridate)
dates.ex1 &amp;lt;- c(&amp;quot;2022-03-15&amp;quot;, &amp;quot;2022-03-16&amp;quot;, &amp;quot;2022-03-17&amp;quot;)
class(dates.ex1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;character&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dates1 &amp;lt;- ymd(dates.ex1)
dates1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2022-03-15&amp;quot; &amp;quot;2022-03-16&amp;quot; &amp;quot;2022-03-17&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(dates1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;year-month-day-ymd-function&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;year-month-day &lt;code&gt;ymd&lt;/code&gt; function&lt;/h1&gt;
&lt;p&gt;The ymd() function also supports variations of the “year-month-day” format, such as “year/month/day” or “year.month.day”.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dates.ex2 &amp;lt;- c(&amp;quot;2022/03/15&amp;quot;, &amp;quot;2022/03/16&amp;quot;, &amp;quot;2022/03/17&amp;quot;)
dates2 &amp;lt;- ymd(dates.ex2)
dates2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2022-03-15&amp;quot; &amp;quot;2022-03-16&amp;quot; &amp;quot;2022-03-17&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(dates2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dates.ex3 &amp;lt;- c(&amp;quot;2022/03/15&amp;quot;, &amp;quot;2022/03/16&amp;quot;, &amp;quot;2022/03/17&amp;quot;)
dates2 &amp;lt;- ymd(dates.ex2)
dates2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2022-03-15&amp;quot; &amp;quot;2022-03-16&amp;quot; &amp;quot;2022-03-17&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(dates2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;month-date-year-mdy-function&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;month-date-year &lt;code&gt;mdy&lt;/code&gt; function&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mdy(c(&amp;quot;03-15-2023&amp;quot;, &amp;quot;03-16-2023&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2023-03-15&amp;quot; &amp;quot;2023-03-16&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;date-month-year-dmy-function&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;date-month-year &lt;code&gt;dmy&lt;/code&gt; function&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dmy(c(&amp;quot;15-03-2023&amp;quot;, &amp;quot;16-03-2023&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2023-03-15&amp;quot; &amp;quot;2023-03-16&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dates-with-strings&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;dates with strings&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ydm(&amp;quot;2023, March 15th&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Warning: All formats failed to parse. No formats found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mdy(&amp;quot;March 15th, 2023&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2023-03-15&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mdy(&amp;quot;Mar 15th, 2023&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2023-03-15&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mdy(&amp;quot;Wednesday, March 15th, 2023&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2023-03-15&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mdy(&amp;quot;15th, March, 2023&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Warning: All formats failed to parse. No formats found.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] NA&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;hour-minutes-second-hms-working-with-dates-and-times&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;hour-minutes-second &lt;code&gt;hms&lt;/code&gt; working with dates and times&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hms(&amp;quot;10:30:00&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;10H 30M 0S&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;ymd_hm-ymd_hms-and-mdy_hms&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;ymd_hm&lt;/code&gt;, &lt;code&gt;ymd_hms&lt;/code&gt; and &lt;code&gt;mdy_hms&lt;/code&gt;&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ymd_hm(&amp;quot;2023-03-15 10:30&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2023-03-15 10:30:00 UTC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ymd_hms(&amp;quot;2023-03-15 10:30:00&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2023-03-15 10:30:00 UTC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mdy_hms(&amp;quot;03-15-2023 10:30:00&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2023-03-15 10:30:00 UTC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;parse_date_time&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;parse_date_time&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;If you have a date format that doesn’t match any of the built-in formats, you can use the parse_date_time() function in lubridate to specify a custom format.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dates.ex4 &amp;lt;- c(&amp;quot;2022/03/15 10:30:00&amp;quot;, &amp;quot;2022/03/16 11:00:00&amp;quot;, &amp;quot;2022/03/17 12:15:00&amp;quot;)

# Define the custom format using the format string
date_format &amp;lt;- &amp;quot;%Y/%m/%d %H:%M:%S&amp;quot;

# Convert the character vector to POSIXct objects using parse_date_time()
parse_date_time(dates.ex4, date_format)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2022-03-15 10:30:00 UTC&amp;quot; &amp;quot;2022-03-16 11:00:00 UTC&amp;quot;
[3] &amp;quot;2022-03-17 12:15:00 UTC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-a-sequence-of-time&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Creating a sequence of time&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y1 &amp;lt;- seq(as.Date(&amp;quot;2012-01-01&amp;quot;),as.Date(&amp;quot;2012-12-01&amp;quot;), by = &amp;quot;1 month&amp;quot;)
y1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; [1] &amp;quot;2012-01-01&amp;quot; &amp;quot;2012-02-01&amp;quot; &amp;quot;2012-03-01&amp;quot; &amp;quot;2012-04-01&amp;quot; &amp;quot;2012-05-01&amp;quot;
 [6] &amp;quot;2012-06-01&amp;quot; &amp;quot;2012-07-01&amp;quot; &amp;quot;2012-08-01&amp;quot; &amp;quot;2012-09-01&amp;quot; &amp;quot;2012-10-01&amp;quot;
[11] &amp;quot;2012-11-01&amp;quot; &amp;quot;2012-12-01&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(y1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;Date&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;seq(as.Date(&amp;quot;2023-03-01&amp;quot;),as.Date(&amp;quot;2023-04-01&amp;quot;), by = &amp;quot;1 week&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;2023-03-01&amp;quot; &amp;quot;2023-03-08&amp;quot; &amp;quot;2023-03-15&amp;quot; &amp;quot;2023-03-22&amp;quot; &amp;quot;2023-03-29&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;extract-various-time-components&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Extract various time components&lt;/h1&gt;
&lt;p&gt;Let’s see how to extract various time components from the elements of the following Date object.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y2023 &amp;lt;- seq(as.Date(&amp;quot;2023-01-01&amp;quot;),as.Date(&amp;quot;2023-12-31&amp;quot;), by = &amp;quot;1 month&amp;quot;)
y2023&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; [1] &amp;quot;2023-01-01&amp;quot; &amp;quot;2023-02-01&amp;quot; &amp;quot;2023-03-01&amp;quot; &amp;quot;2023-04-01&amp;quot; &amp;quot;2023-05-01&amp;quot;
 [6] &amp;quot;2023-06-01&amp;quot; &amp;quot;2023-07-01&amp;quot; &amp;quot;2023-08-01&amp;quot; &amp;quot;2023-09-01&amp;quot; &amp;quot;2023-10-01&amp;quot;
[11] &amp;quot;2023-11-01&amp;quot; &amp;quot;2023-12-01&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;year()&lt;/code&gt;: Extracts the year component&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;year(y2023)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; [1] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;quarter()&lt;/code&gt;: Extracts the quarter&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;quarter(y2023)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; [1] 1 1 1 2 2 2 3 3 3 4 4 4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;month()&lt;/code&gt;: Extracts the month component&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;month(y2023)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; [1]  1  2  3  4  5  6  7  8  9 10 11 12&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;week()&lt;/code&gt;: Extracts the week component&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;week(y2023)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; [1]  1  5  9 13 18 22 26 31 35 40 44 48&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;day()&lt;/code&gt;: Extracts the day component&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;day(y2023)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; [1] 1 1 1 1 1 1 1 1 1 1 1 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To illustrate the remaining functions I use the following example&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mydate &amp;lt;- ymd_hms(&amp;quot;2023-03-15 10:30:01&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;hour()&lt;/code&gt;: Extracts the hour component&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hour(mydate)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 10&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;minute()&lt;/code&gt;: Extracts the minute component&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;minute(mydate)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 30&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;second()&lt;/code&gt;: Extracts the second component&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;second(mydate)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a website using Quarto</title>
      <link>https://thiyanga.netlify.app/post/blog/</link>
      <pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/blog/</guid>
      <description>


&lt;p&gt;I created &lt;a href=&#34;https://thiyanga-spatiotemporal.netlify.app/&#34;&gt;this blog&lt;/a&gt; using Quarto. Here are the steps that I used to create the blog.&lt;/p&gt;
&lt;div id=&#34;step-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 1&lt;/h2&gt;
&lt;p&gt;Install Quarto. Follow the instructions in &lt;a href=&#34;https://quarto.org/docs/get-started/&#34;&gt;this&lt;/a&gt; tutorial.&lt;/p&gt;
&lt;p&gt;On R Console install Quarto using the command&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(quarto)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 2&lt;/h2&gt;
&lt;p&gt;Create a git hub repository and create a RStudio project.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-3&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 3&lt;/h2&gt;
&lt;p&gt;The type the following command in the RStudio terminal&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;quarto create-project myblog --type website:blog&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will create a folder called &lt;code&gt;myblog&lt;/code&gt; with the following documents inside.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/quarto.PNG&#34; alt=&#34;final image&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Copy all the documents inside the folder into your project folder, and delete the &lt;code&gt;myblog&lt;/code&gt; folder.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-4&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 4&lt;/h2&gt;
&lt;p&gt;Rename &lt;code&gt;index.qmd&lt;/code&gt; to &lt;code&gt;blog.qmd&lt;/code&gt; and rename &lt;code&gt;about.qmd&lt;/code&gt; to &lt;code&gt;index.qmd&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-5&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 5&lt;/h2&gt;
&lt;p&gt;Include your details to &lt;code&gt;_quarto.yml&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-6&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 6&lt;/h2&gt;
&lt;p&gt;Click &lt;code&gt;Render&lt;/code&gt; button to preview the blog.&lt;/p&gt;
&lt;p&gt;To preview the website in the current directory type the following command in the terminal&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;quarto preview&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-7&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Step 7&lt;/h2&gt;
&lt;p&gt;To publish the blog with Netlify, type the following command.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;quarto publish netlify&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;other-useful-links&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Other useful links&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html&#34;&gt;https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://quarto.org/docs/publishing/netlify.htm&#34;&gt;https://quarto.org/docs/publishing/netlify.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://beamilz.com/posts/2022-06-05-creating-a-blog-with-quarto/en/&#34;&gt;https://beamilz.com/posts/2022-06-05-creating-a-blog-with-quarto/en/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bootswatch.com/&#34;&gt;Themes&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Error: C stack usage is too close to the limit</title>
      <link>https://thiyanga.netlify.app/post/error1/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/error1/</guid>
      <description>


&lt;div id=&#34;error-c-stack-usage-is-too-close-to-the-limit&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Error: C stack usage is too close to the limit&lt;/h2&gt;
&lt;p&gt;While using Rstudio on macOS Mojave (version 10.14.6) to work with R, I recently ran across the following problem.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/error.PNG&#34; alt=&#34;final image&#34; width=&#34;400&#34;/&gt;&lt;/p&gt;
&lt;p&gt;In order to fix the error, I deleted the &lt;code&gt;.Rprofile&lt;/code&gt;. You can erase everything in the “.Rprofile” by using the commands listed below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;file.edit(file.path(&amp;quot;~&amp;quot;, &amp;quot;.Rprofile&amp;quot;)) 
file.edit(&amp;quot;.Rprofile&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Logistic Regression: Model Building and Interpretation</title>
      <link>https://thiyanga.netlify.app/post/logisticregression/</link>
      <pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/logisticregression/</guid>
      <description>
&lt;script src=&#34;https://thiyanga.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data&lt;/h2&gt;
&lt;p&gt;In this post I am going to use &lt;code&gt;penguins&lt;/code&gt; dataset in &lt;code&gt;palmerpenguins&lt;/code&gt; package in R. First we load the dataset.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(palmerpenguins)
library(skimr)
library(tidyverse)
library(plotly)
library(visdat)
library(patchwork)
data(&amp;quot;penguins&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is an overview of the dataset.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;skim(penguins)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:unnamed-chunk-2&#34;&gt;Table 1: &lt;/span&gt;Data summary&lt;/caption&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Name&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;penguins&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Number of rows&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;344&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Number of columns&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;_______________________&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Column type frequency:&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;factor&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;numeric&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;________________________&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Group variables&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Variable type: factor&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;skim_variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_missing&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;complete_rate&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;ordered&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_unique&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;top_counts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;species&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ade: 152, Gen: 124, Chi: 68&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;island&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Bis: 168, Dre: 124, Tor: 52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sex&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.97&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FALSE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mal: 168, fem: 165&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Variable type: numeric&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;skim_variable&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_missing&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;complete_rate&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mean&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;sd&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p0&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p25&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p50&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p75&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p100&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;hist&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bill_length_mm&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;43.92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.46&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;39.23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;44.45&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48.5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;59.6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▃▇▇▆▁&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bill_depth_mm&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17.15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.97&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15.60&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17.30&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21.5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▅▅▇▇▂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;flipper_length_mm&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;200.92&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14.06&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;172.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;190.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;197.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;213.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;231.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▂▇▃▅▂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;body_mass_g&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4201.75&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;801.95&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2700.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3550.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4050.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4750.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6300.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▃▇▆▃▂&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;year&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2008.03&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.82&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2007.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2007.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2008.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2009.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2009.0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;▇▁▇▁▇&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(penguins)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;      species          island    bill_length_mm  bill_depth_mm  
 Adelie   :152   Biscoe   :168   Min.   :32.10   Min.   :13.10  
 Chinstrap: 68   Dream    :124   1st Qu.:39.23   1st Qu.:15.60  
 Gentoo   :124   Torgersen: 52   Median :44.45   Median :17.30  
                                 Mean   :43.92   Mean   :17.15  
                                 3rd Qu.:48.50   3rd Qu.:18.70  
                                 Max.   :59.60   Max.   :21.50  
                                 NA&amp;#39;s   :2       NA&amp;#39;s   :2      
 flipper_length_mm  body_mass_g       sex           year     
 Min.   :172.0     Min.   :2700   female:165   Min.   :2007  
 1st Qu.:190.0     1st Qu.:3550   male  :168   1st Qu.:2007  
 Median :197.0     Median :4050   NA&amp;#39;s  : 11   Median :2008  
 Mean   :200.9     Mean   :4202                Mean   :2008  
 3rd Qu.:213.0     3rd Qu.:4750                3rd Qu.:2009  
 Max.   :231.0     Max.   :6300                Max.   :2009  
 NA&amp;#39;s   :2         NA&amp;#39;s   :2                                 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before moving on to the full logistic regression model, it’s a good idea to look at the associations between each predictor and gender. Before moving on to the whole model, It’s critical to first grasp these linkages. We can use logistic regression to look at all of the predictors simultaneously.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p1_species &amp;lt;- penguins %&amp;gt;% 
  na.omit() %&amp;gt;%
  count(species,sex) %&amp;gt;% 
  group_by(species) %&amp;gt;% 
  mutate(Percentage = 100*n/sum(n)) %&amp;gt;% 
  ggplot(aes(x = species,y = Percentage,fill=sex))+
  geom_bar(stat=&amp;quot;identity&amp;quot;) + 
  scale_fill_manual(values = c(&amp;quot;purple&amp;quot;,&amp;quot;cyan4&amp;quot;)) +
  coord_flip() +
  theme(legend.position = &amp;quot;bottom&amp;quot;) +
  ggtitle(&amp;quot;a&amp;quot;) 

p2_island &amp;lt;- penguins %&amp;gt;% 
  count(island,sex) %&amp;gt;% 
  group_by(island) %&amp;gt;% 
  mutate(Percentage = 100*n/sum(n)) %&amp;gt;% 
  ggplot(aes(x = island,y = Percentage,fill=sex))+
  geom_bar(stat=&amp;quot;identity&amp;quot;) + 
  scale_fill_manual(values = c(&amp;quot;purple&amp;quot;,&amp;quot;cyan4&amp;quot;)) + 
  coord_flip() +
  theme(legend.position = &amp;quot;bottom&amp;quot;) +
  ggtitle(&amp;quot;b&amp;quot;)
(p1_species|p2_island)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span style=&#34;display:block;&#34; id=&#34;fig:unnamed-chunk-3&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://thiyanga.netlify.app/post/logisticregression_files/figure-html/unnamed-chunk-3-1.png&#34; alt=&#34;Distribution of (a) species and (d) island by gender.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Distribution of (a) species and (d) island by gender.
&lt;/p&gt;
&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p3_length &amp;lt;-  ggplot(penguins, aes(x=sex, y=bill_length_mm, fill=sex)) +
  geom_boxplot() + 
  scale_fill_manual(values = c(&amp;quot;purple&amp;quot;,&amp;quot;cyan4&amp;quot;)) + 
  theme(legend.position = &amp;quot;bottom&amp;quot;) + ggtitle(&amp;quot;a&amp;quot;)

p4_depth &amp;lt;-  ggplot(penguins, aes(x=sex, y=bill_depth_mm, fill=sex)) +
  geom_boxplot() + 
  scale_fill_manual(values = c(&amp;quot;purple&amp;quot;,&amp;quot;cyan4&amp;quot;)) + 
  theme(legend.position = &amp;quot;bottom&amp;quot;) + ggtitle(&amp;quot;b&amp;quot;)

p5_flipper &amp;lt;-  ggplot(penguins, aes(x=sex, y=flipper_length_mm, fill=sex)) +
  geom_boxplot() + 
  scale_fill_manual(values = c(&amp;quot;purple&amp;quot;,&amp;quot;cyan4&amp;quot;)) + 
  theme(legend.position = &amp;quot;bottom&amp;quot;) + ggtitle(&amp;quot;c&amp;quot;)

p6_bmi &amp;lt;-  ggplot(penguins, aes(x=sex, y=body_mass_g, fill=sex)) +
  geom_boxplot() + 
  scale_fill_manual(values = c(&amp;quot;purple&amp;quot;,&amp;quot;cyan4&amp;quot;)) + 
  theme(legend.position = &amp;quot;bottom&amp;quot;) + ggtitle(&amp;quot;d&amp;quot;)

(p3_length|p4_depth)/(p5_flipper|p6_bmi)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span style=&#34;display:block;&#34; id=&#34;fig:unnamed-chunk-4&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://thiyanga.netlify.app/post/logisticregression_files/figure-html/unnamed-chunk-4-1.png&#34; alt=&#34;Distribution of (a) bill length, (b) bill depth, (c) flipper length and (d) body mass index by gender.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Distribution of (a) bill length, (b) bill depth, (c) flipper length and (d) body mass index by gender.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;missing-values-exploration&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Missing values exploration&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vis_miss(penguins)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/logisticregression_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;remove-missing-values&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Remove missing values&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;penguins_omit &amp;lt;- penguins %&amp;gt;%
  na.omit()
vis_miss(penguins_omit)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/logisticregression_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;building-logistic-regression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Building logistic regression&lt;/h2&gt;
&lt;p&gt;Then, using the other variables in the dataset, I’ll create a logistic regression model to predict the gender of the palmer penguins. One goal of this work is to identify which variables significantly contribute to determining the gender of penguins. Before beginning to build the model, double-check that all qualitative variables have been saved as factors.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fit &amp;lt;- glm(sex ~ species + island + bill_length_mm + bill_depth_mm + flipper_length_mm + body_mass_g, data=penguins_omit, family=&amp;quot;binomial&amp;quot;)
summary(fit)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
Call:
glm(formula = sex ~ species + island + bill_length_mm + bill_depth_mm + 
    flipper_length_mm + body_mass_g, family = &amp;quot;binomial&amp;quot;, data = penguins_omit)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.4128  -0.2000   0.0022   0.1441   2.8235  

Coefficients:
                    Estimate Std. Error z value Pr(&amp;gt;|z|)    
(Intercept)       -80.376672  12.329735  -6.519 7.08e-11 ***
speciesChinstrap   -7.402697   1.662534  -4.453 8.48e-06 ***
speciesGentoo      -8.427611   2.597027  -3.245  0.00117 ** 
islandDream         0.324158   0.809135   0.401  0.68870    
islandTorgersen    -0.507858   0.855746  -0.593  0.55287    
bill_length_mm      0.614436   0.131968   4.656 3.22e-06 ***
bill_depth_mm       1.646446   0.335798   4.903 9.43e-07 ***
flipper_length_mm   0.026654   0.048307   0.552  0.58111    
body_mass_g         0.005819   0.001087   5.352 8.71e-08 ***
---
Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 461.61  on 332  degrees of freedom
Residual deviance: 126.05  on 324  degrees of freedom
AIC: 144.05

Number of Fisher Scoring iterations: 7&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To represent qualitative variables, R will build an indicator (dummy) variable using the lowest coded category as the reference group. For example,&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Y=\begin{cases}
0, &amp;amp; \text{if female}\\
1, &amp;amp; \text{if male}
\end{cases}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;interpretation-of-parameter-estimates-of-logistic-regression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Interpretation of parameter estimates of logistic regression&lt;/h2&gt;
&lt;p&gt;The “Estimates” in the above output corresponds to the &lt;strong&gt;log-odds&lt;/strong&gt;. The &lt;strong&gt;odd ratios&lt;/strong&gt; can be obtained as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;exp(coefficients(fit))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;      (Intercept)  speciesChinstrap     speciesGentoo       islandDream 
     1.238383e-35      6.096066e-04      2.187435e-04      1.382866e+00 
  islandTorgersen    bill_length_mm     bill_depth_mm flipper_length_mm 
     6.017832e-01      1.848613e+00      5.188507e+00      1.027012e+00 
      body_mass_g 
     1.005836e+00 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[odd = \frac{P(event)}{1-P(event)}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The 95% confidence intervals for log-odds can be obtained as follows&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;confint.default(fit)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;                          2.5 %        97.5 %
(Intercept)       -1.045425e+02 -56.210836165
speciesChinstrap  -1.066120e+01  -4.144190616
speciesGentoo     -1.351769e+01  -3.337530854
islandDream       -1.261718e+00   1.910034317
islandTorgersen   -2.185089e+00   1.169372704
bill_length_mm     3.557834e-01   0.873088085
bill_depth_mm      9.882945e-01   2.304597483
flipper_length_mm -6.802606e-02   0.121333507
body_mass_g        3.687778e-03   0.007949886&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The 95% confidence intervals for odds are as follows&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;exp(confint.default(fit))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;                         2.5 %       97.5 %
(Intercept)       3.960644e-46 3.872077e-25
speciesChinstrap  2.343681e-05 1.585626e-02
speciesGentoo     1.346919e-06 3.552456e-02
islandDream       2.831672e-01 6.753321e+00
islandTorgersen   1.124677e-01 3.219972e+00
bill_length_mm    1.427298e+00 2.394293e+00
bill_depth_mm     2.686648e+00 1.002014e+01
flipper_length_mm 9.342361e-01 1.129001e+00
body_mass_g       1.003695e+00 1.007982e+00&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can write the fitted logistic regression model as follows&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\hat{Y} = \frac{1}{1+e^{-z}} = \frac{1}{e^{-80.83 -7.40Chinstrap -8.42Gentoo +0.32Dream -0.50Torgersen + 0.61 bill\_length\_mm + 1.64 bill\_depth\_mm + 0.02 flipper\_length\_mm + 0.005 body\_mass\_g}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Where,&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Chinstrap=\begin{cases}
1, &amp;amp; \text{if Chinstrap}\\
0, &amp;amp; \text{otherwise}
\end{cases}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Gentoo=\begin{cases}
1, &amp;amp; \text{if Gentoo}\\
0, &amp;amp; \text{otherwise}
\end{cases}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Dream=\begin{cases}
1, &amp;amp; \text{if Dream}\\
0, &amp;amp; \text{otherwise}
\end{cases}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Torgersen=\begin{cases}
1, &amp;amp; \text{if Torgersen}\\
0, &amp;amp; \text{otherwise}
\end{cases}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[bill\_length\_mm = \text{bill length (millimeters)},\]&lt;/span&gt;
&lt;span class=&#34;math display&#34;&gt;\[bill\_depth\_mm = \text{bill depth (millimeters)},\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[flipper\_length\_mm = \text{flipper length (millimeters)},\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[body\_mass\_g = \text{body mass (grams)}.\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;interpretation-of-parameter-estimates&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Interpretation of parameter estimates&lt;/h2&gt;
&lt;p&gt;The variables species, bill length (mm), bill depth (mm) and body mass (g) significantly contribute to the model.&lt;/p&gt;
&lt;p&gt;With all other factors held constant, this fitted model predicts that the odds of discovering a male penguin on Dream island are 1.38 times higher than on Biscoe island.&lt;/p&gt;
&lt;p&gt;For each one-unit increase in bill depth, the odds of detecting a male increased 5.18 times (95 percent CI 2.68–10.02).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Model Evaluation: Next Post! Model evaluation should be done before interpreting the model.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Zoom Your Plots with ggforce</title>
      <link>https://thiyanga.netlify.app/post/ggforce/</link>
      <pubDate>Mon, 28 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/ggforce/</guid>
      <description>
&lt;script src=&#34;https://thiyanga.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;To enlarge a section of data in your &lt;code&gt;ggplots&lt;/code&gt;, use the &lt;code&gt;facet_zoom&lt;/code&gt; function in the &lt;a href=&#34;https://rdrr.io/cran/ggforce/man/facet_zoom.html&#34;&gt;ggforce&lt;/a&gt; package. To illustrate I am using the &lt;a href=&#34;https://cran.r-project.org/web/packages/gapminder/README.html&#34;&gt;gapminder&lt;/a&gt; dataset in &lt;a href=&#34;https://cran.r-project.org/web/packages/gapminder/README.html&#34;&gt;gapminder&lt;/a&gt; package.&lt;/p&gt;
&lt;div id=&#34;load-necessary&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load necessary&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(RColorBrewer)
library(ggforce)
library(gapminder)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;set-the-theme-for-plots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Set the theme for plots&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theme_set(theme_bw())&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;zoom-according-to-a-continuous-scale-variable&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Zoom according to a continuous scale variable&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;zoom the Y axis&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(gapminder, aes(y=lifeExp, x=gdpPercap)) + geom_point() + coord_fixed() +  
  facet_zoom(ylim = c(60, 80)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/ggforce_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;zoom the X axis&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(gapminder, aes(y=lifeExp, x=gdpPercap)) + geom_point() + coord_fixed() +   
  facet_zoom(xlim = c(0, 10000)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/ggforce_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;zoom the X axis and the Y axis&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(gapminder, aes(y=lifeExp, x=gdpPercap)) + geom_point() + coord_fixed() +  
  facet_zoom(xlim = c(0, 10000), ylim=c(60, 80)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/ggforce_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;zoom-according-to-a-qualitative-variable&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Zoom according to a qualitative variable&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;zoom the Y axis&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(gapminder, aes(y=lifeExp, x=gdpPercap, col=continent)) + geom_point() + 
  coord_fixed() + 
  scale_color_brewer(palette = &amp;quot;Dark2&amp;quot;) +
  facet_zoom(y = continent == &amp;#39;Oceania&amp;#39;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/ggforce_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;zoom the X axis&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(gapminder, aes(y=lifeExp, x=gdpPercap, col=continent)) + geom_point() + 
  coord_fixed() + 
  scale_color_brewer(palette = &amp;quot;Dark2&amp;quot;) +
  facet_zoom(x = continent == &amp;#39;Oceania&amp;#39;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/ggforce_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;zoom the X axis and the Y axis&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(gapminder, aes(y=lifeExp, x=gdpPercap, col=continent)) + geom_point() + 
  coord_fixed() + 
  scale_color_brewer(palette = &amp;quot;Dark2&amp;quot;) +
  facet_zoom(xy = continent == &amp;#39;Oceania&amp;#39;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/ggforce_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(gapminder, aes(y=lifeExp, x=gdpPercap, col=continent)) + geom_point() + 
  coord_fixed() + 
  scale_color_brewer(palette = &amp;quot;Dark2&amp;quot;) +
  facet_zoom(xy = continent == &amp;#39;Oceania&amp;#39;, split = TRUE) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/ggforce_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Formatting axis labels in ggplot</title>
      <link>https://thiyanga.netlify.app/post/plotaxis/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/plotaxis/</guid>
      <description>
&lt;script src=&#34;https://thiyanga.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;With the ggplot2 package, you’ve got full control over the axes labels in charts. Here we are going to look at some of the most commonly needed formatting options in order to make your graph aesthetically pleasing.&lt;/p&gt;
&lt;div id=&#34;comma-separated-labels&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Comma-separated labels&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;comma_format&lt;/code&gt; function in &lt;code&gt;scales&lt;/code&gt; can be used to add comma separated labels. To illustrate this I use African names data set in TidyTuesday.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(scales) 
## read data
african_names &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-16/african_names.csv&amp;quot;)
## plot
african_names %&amp;gt;%
  ggplot(aes(year_arrival)) +
  geom_histogram(bins = 20, fill = &amp;quot;darkslateblue&amp;quot;, alpha = 0.7, col=&amp;quot;white&amp;quot;) +
  scale_y_continuous(labels = scales::comma_format()) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/plotaxis_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;change-label-angles-horizontal-justification-and-vertical-justification&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Change label angles, horizontal justification and vertical justification&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Angles only&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The ggplot2 package &lt;code&gt;element text&lt;/code&gt; can be used to alter the label angles as well as the horizontal and vertical justifications.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(palmerpenguins)
penguins %&amp;gt;%
  ggplot(aes(x=species, fill=species)) + geom_bar() +
  scale_fill_manual(values=c(&amp;quot;#1b9e77&amp;quot;, &amp;quot;#d95f02&amp;quot;, &amp;quot;#7570b3&amp;quot;)) + 
  theme(axis.text.x=element_text(angle=30))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/plotaxis_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Angles, horizontal justification and vertical justification&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;penguins %&amp;gt;%
  ggplot(aes(x=species, fill=species)) + geom_bar() +  scale_fill_manual(values=c(&amp;quot;#1b9e77&amp;quot;, &amp;quot;#d95f02&amp;quot;, &amp;quot;#7570b3&amp;quot;)) + 
  theme(axis.text.x=element_text(angle=30, vjust=.8, hjust=0.8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/plotaxis_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Weighted LOESS (LOcal regrESSion) </title>
      <link>https://thiyanga.netlify.app/post/blog/</link>
      <pubDate>Sat, 07 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/blog/</guid>
      <description>
&lt;script src=&#34;https://thiyanga.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;local-regression-loess-or-locally-weighted-scatter-plot-smoother-lowess&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;code&gt;LO&lt;/code&gt;cal regr&lt;code&gt;ESS&lt;/code&gt;ion (LOESS) or &lt;code&gt;LO&lt;/code&gt;cally &lt;code&gt;WE&lt;/code&gt;ighted &lt;code&gt;S&lt;/code&gt;catter-plot &lt;code&gt;S&lt;/code&gt;moother (LOWESS)&lt;/h1&gt;
&lt;p&gt;LOESS or LOWESS is a nonparametric technique to fit a smooth curve through points in a scatter plot. This approach uses locally estimated linear regression at its core.&lt;/p&gt;
&lt;p&gt;The following code illustrates how to include a loess line using the ggplot2 package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)

set.seed(1)
x &amp;lt;- rnorm(60)
y &amp;lt;- c(rnorm(40), 10, rnorm(19))
df &amp;lt;- data.frame(x=x, y=y)

## Without weights
ggplot(data=df, aes(x=x, y=y)) + geom_point() + 
 geom_smooth(method=loess, legend=FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/loess_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Furthermore your can plot loess smoothing weighting the observations as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;weights &amp;lt;- c(rep(1, 40), 20, rep(1, 19))
df$weights &amp;lt;- weights


ggplot(data=df, aes(x=x, y=y, size=weights, weight=weights)) + geom_point() + 
 geom_smooth(method=loess, legend=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/loess_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Statistical Machine Learning for  Medicinal Plant Identification</title>
      <link>https://thiyanga.netlify.app/project/medlea/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/project/medlea/</guid>
      <description>&lt;h1 id=&#34;algorithm-for-leaves-classification&#34;&gt;Algorithm for leaves classification&lt;/h1&gt;
&lt;h2 id=&#34;medipi-mediicinal-plant-identification-algorithm&#34;&gt;MEDIPI (&lt;strong&gt;MEDI&lt;/strong&gt;icinal &lt;strong&gt;P&lt;/strong&gt;lant &lt;strong&gt;I&lt;/strong&gt;dentification) algorithm&lt;/h2&gt;
&lt;p&gt;Medicinal plants are usually identified by practitioners based on years of experience through
sensory or olfactory senses. The other method of recognizing these plants involves Laboratory-
based testing, which requires trained skills, data interpretation which is costly and time-intensive. Automatic ways to identify medicinal plants are useful especially for those that are lacking experience in herbal recognition. We introduce a computationally efficient new algorithm for medicinal plant classification.  We
refer to our medicinal plant classification algorithm as MEDIPI : MEDIicinal Plant
Identification. MEDIPI
contains two main phases (i) The offline phase, and (ii) The online phase. The algorithm operates on a set of interpretable features  computed from the leaf images. The offline phase of the algorithm contains 4 main steps: i) image processing, ii) feature extraction, iii) train a algorithm. Figure 1 provides an overview of our algorithm. Figure 2 provides a selected set of features we use in the algorithm. The image processing steps are shown in Figure 3.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;medipi.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 1: Overview of MEDIPI algorithm&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sh_f.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 2: Leaf image features&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image_processing.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 3: Image processing workflow&lt;/p&gt;
&lt;h1 id=&#34;benchmark-dataset-for-plant-leaves-classification&#34;&gt;Benchmark dataset for plant leaves classification&lt;/h1&gt;
&lt;p&gt;Researchers usually struggle and spend a lot of time
establishing a database by gathering many leaf samples as raw data. By sharing our database we
provide a training/test database to other researchers to develop new algorithms or to evaluate their algorithms. Furthermore,  data
sharing encourages more connections and collaboration between scientists, which leads to better decision-making.&lt;/p&gt;
&lt;h2 id=&#34;r-software-package-medlea-medicinal-leaf&#34;&gt;R Software Package &lt;code&gt;MedLEA&lt;/code&gt;: &lt;strong&gt;Med&lt;/strong&gt;icinal &lt;strong&gt;LEA&lt;/strong&gt;f&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/SMART-Research/MedLEA&#34;&gt;MedLEA&lt;/a&gt; package provides two datasets.&lt;/p&gt;
&lt;p&gt;i) A dataset of morphological and structural features of 471 medicinal plant leaves. The features of each species are recorded by manually viewing the medicinal plant repository available at (&lt;a href=&#34;http://www.instituteofayurveda.org/plants/&#34;&gt;http://www.instituteofayurveda.org/plants/&lt;/a&gt;). For more information visit at &lt;a href=&#34;https://github.com/SMART-Research/MedLEA&#34;&gt;https://github.com/SMART-Research/MedLEA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;leaf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 4:  Some morphological characteristics of profiles&lt;/p&gt;
&lt;p&gt;ii) Leaf image data set:  A database of leaf images of medicinal plants in Sri Lanka is
not yet available. Hence, through this research, we establish a repository of medicinal
plant images. This repository contains 1099 leaf images of 31 species. There are 29-45 images per species.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;imgleaf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure 5: Few samples from the MedLEA images&lt;/p&gt;
&lt;p&gt;You can get access to the data set via the MedLEA package.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;install.packages(&amp;#34;MedLEA&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;research-outputs&#34;&gt;Research outputs&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Papers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://arxiv.org/abs/2106.08077&#34;&gt;Lakshika, J. P., &amp;amp; Talagala, T. S. (2021). Computer-aided Interpretable Features for Leaf Image Classification. arXiv preprint arXiv:2106.08077.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jayani P. G. Lakshika and Thiyanga S. Talagala (2021). MedLEA: Morphological and Structural Features of Medicinal Leaves. R package version 1.0.1.
&lt;a href=&#34;https://CRAN.R-project.org/package=MedLEA&#34;&gt;https://CRAN.R-project.org/package=MedLEA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://CRAN.R-project.org/package=MedLEA&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/MedLEA&#34; alt=&#34;CRAN\_Status\_Badge&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://cran.r-project.org/package=MedLEA&#34;&gt;&lt;img src=&#34;http://cranlogs.r-pkg.org/badges/MedLEA&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Do you want a new data package for teaching? MedLEA package provides morphological and structural features of 471 medicinal plant leaves and 1099 leaf images of 31 species and 29-45 images per species. &lt;a href=&#34;https://t.co/y14wvvMBH8&#34;&gt;https://t.co/y14wvvMBH8&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/DataVisualization?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#DataVisualization&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/dataviz?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#dataviz&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/MachineLearning?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#MachineLearning&lt;/a&gt; &lt;a href=&#34;https://t.co/rYpyj16rTs&#34;&gt;pic.twitter.com/rYpyj16rTs&lt;/a&gt;&lt;/p&gt;&amp;mdash; Thiyanga Talagala (@thiyangt) &lt;a href=&#34;https://twitter.com/thiyangt/status/1381060311357136896?ref_src=twsrc%5Etfw&#34;&gt;April 11, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;Conference talks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCqfu75XVtV4s-W5aiw1tavQ&#34;&gt;Click here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Research reproducibility&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;R codes and data to reproduce the results in the paper &amp;ldquo;Computer-aided Interpretable Features for Leaf Image Classification&amp;rdquo; available at &lt;a href=&#34;https://github.com/SMART-Research/leaffeatures_paper&#34;&gt;https://github.com/SMART-Research/leaffeatures_paper&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reporting your model outputs</title>
      <link>https://thiyanga.netlify.app/post/regoutputs/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/regoutputs/</guid>
      <description>


&lt;p&gt;Let’s see how to format your model outputs with &lt;a href=&#34;https://easystats.github.io/parameters/index.html&#34;&gt;parameters&lt;/a&gt; package in R by &lt;span class=&#34;citation&#34;&gt;Lüdecke et al. (2020)&lt;/span&gt;.&lt;/p&gt;
&lt;div id=&#34;fit-a-simple-linear-regression-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Fit a simple linear regression model&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;quot;parameters&amp;quot;)
library(parameters)
library(magrittr)
library(gt)
library(see)
model &amp;lt;- lm(Volume ~ Height + Girth, data=trees)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;reporting-model-parameter-estimates&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reporting model parameter estimates&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model %&amp;gt;% model_parameters()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Parameter   | Coefficient |   SE |           95% CI | t(28) |      p
--------------------------------------------------------------------
(Intercept) |      -57.99 | 8.64 | [-75.68, -40.29] | -6.71 | &amp;lt; .001
Height      |        0.34 | 0.13 | [  0.07,   0.61] |  2.61 | 0.014 
Girth       |        4.71 | 0.26 | [  4.17,   5.25] | 17.82 | &amp;lt; .001&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model %&amp;gt;% model_parameters() %&amp;gt;% print_md()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Parameter&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Coefficient&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;SE&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;95% CI&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;t(28)&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;p&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;(Intercept)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-57.99&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8.64&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;(-75.68, -40.29)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-6.71&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;lt; .001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Height&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.34&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.13&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;(0.07, 0.61)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2.61&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.014&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Girth&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4.71&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;0.26&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;(4.17, 5.25)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;17.82&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;lt; .001&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model %&amp;gt;% model_parameters() %&amp;gt;% print_html()&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#nsvmgadylp .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#nsvmgadylp .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#nsvmgadylp .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#nsvmgadylp .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#nsvmgadylp .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#nsvmgadylp .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#nsvmgadylp .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#nsvmgadylp .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#nsvmgadylp .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#nsvmgadylp .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#nsvmgadylp .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#nsvmgadylp .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#nsvmgadylp .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#nsvmgadylp .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#nsvmgadylp .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#nsvmgadylp .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#nsvmgadylp .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#nsvmgadylp .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#nsvmgadylp .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#nsvmgadylp .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#nsvmgadylp .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#nsvmgadylp .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#nsvmgadylp .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#nsvmgadylp .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#nsvmgadylp .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#nsvmgadylp .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#nsvmgadylp .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#nsvmgadylp .gt_left {
  text-align: left;
}

#nsvmgadylp .gt_center {
  text-align: center;
}

#nsvmgadylp .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#nsvmgadylp .gt_font_normal {
  font-weight: normal;
}

#nsvmgadylp .gt_font_bold {
  font-weight: bold;
}

#nsvmgadylp .gt_font_italic {
  font-style: italic;
}

#nsvmgadylp .gt_super {
  font-size: 65%;
}

#nsvmgadylp .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;nsvmgadylp&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;6&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Regression Model&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;6&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Parameter&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;SE&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;95% CI&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t(28)&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;-57.99&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;8.64&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;(-75.68, -40.29)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;-6.71&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt; .001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Height&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;0.34&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;0.13&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;(0.07, 0.61)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2.61&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;0.014 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Girth&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;4.71&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;0.26&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;(4.17, 5.25)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;17.82&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt; .001&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;&lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;control-the-number-of-decimal-places&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Control the number of decimal places&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model %&amp;gt;% model_parameters(digits=3) %&amp;gt;% print_html()&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#vcgykaczmq .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#vcgykaczmq .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vcgykaczmq .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#vcgykaczmq .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#vcgykaczmq .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vcgykaczmq .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#vcgykaczmq .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#vcgykaczmq .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#vcgykaczmq .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#vcgykaczmq .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#vcgykaczmq .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#vcgykaczmq .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#vcgykaczmq .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#vcgykaczmq .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#vcgykaczmq .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#vcgykaczmq .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#vcgykaczmq .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#vcgykaczmq .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vcgykaczmq .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#vcgykaczmq .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#vcgykaczmq .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#vcgykaczmq .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#vcgykaczmq .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#vcgykaczmq .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vcgykaczmq .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#vcgykaczmq .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#vcgykaczmq .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#vcgykaczmq .gt_left {
  text-align: left;
}

#vcgykaczmq .gt_center {
  text-align: center;
}

#vcgykaczmq .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#vcgykaczmq .gt_font_normal {
  font-weight: normal;
}

#vcgykaczmq .gt_font_bold {
  font-weight: bold;
}

#vcgykaczmq .gt_font_italic {
  font-style: italic;
}

#vcgykaczmq .gt_super {
  font-size: 65%;
}

#vcgykaczmq .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;vcgykaczmq&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;6&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Regression Model&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;6&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Parameter&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Coefficient&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;SE&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;95% CI&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;t(28)&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;(Intercept)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;-57.988&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;8.638&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;(-75.68, -40.29)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;-6.713&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt; .001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Height&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;0.339&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;0.130&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;(0.07, 0.61)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2.607&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;0.014 &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Girth&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;4.708&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;0.264&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;(4.17, 5.25)&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;17.816&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt; .001&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;&lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;visualise-model-parameter-estimates&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Visualise model parameter estimates&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model %&amp;gt;% model_parameters(digits=3) %&amp;gt;% plot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/regoutputs_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reporting-anova-table&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reporting ANOVA table&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model %&amp;gt;% aov() %&amp;gt;% model_parameters() %&amp;gt;% print_html()&lt;/code&gt;&lt;/pre&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#xzgahfxcsv .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#xzgahfxcsv .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#xzgahfxcsv .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#xzgahfxcsv .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 4px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#xzgahfxcsv .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#xzgahfxcsv .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#xzgahfxcsv .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#xzgahfxcsv .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#xzgahfxcsv .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#xzgahfxcsv .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#xzgahfxcsv .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#xzgahfxcsv .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#xzgahfxcsv .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#xzgahfxcsv .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#xzgahfxcsv .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#xzgahfxcsv .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#xzgahfxcsv .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#xzgahfxcsv .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#xzgahfxcsv .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#xzgahfxcsv .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#xzgahfxcsv .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#xzgahfxcsv .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#xzgahfxcsv .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#xzgahfxcsv .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#xzgahfxcsv .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#xzgahfxcsv .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#xzgahfxcsv .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#xzgahfxcsv .gt_left {
  text-align: left;
}

#xzgahfxcsv .gt_center {
  text-align: center;
}

#xzgahfxcsv .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#xzgahfxcsv .gt_font_normal {
  font-weight: normal;
}

#xzgahfxcsv .gt_font_bold {
  font-weight: bold;
}

#xzgahfxcsv .gt_font_italic {
  font-style: italic;
}

#xzgahfxcsv .gt_super {
  font-size: 65%;
}

#xzgahfxcsv .gt_footnote_marks {
  font-style: italic;
  font-size: 65%;
}
&lt;/style&gt;
&lt;div id=&#34;xzgahfxcsv&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;&lt;table class=&#34;gt_table&#34;&gt;
  &lt;thead class=&#34;gt_header&#34;&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;6&#34; class=&#34;gt_heading gt_title gt_font_normal&#34; style&gt;Regression Model&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th colspan=&#34;6&#34; class=&#34;gt_heading gt_subtitle gt_font_normal gt_bottom_border&#34; style&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_left&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Parameter&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Sum_Squares&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;df&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;Mean_Square&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;F&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34;&gt;p&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Height&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2901.19&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;2901.19&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;192.53&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt; .001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Girth&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;4782.97&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;1&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;4782.97&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;317.41&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt; .001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&#34;gt_row gt_left&#34;&gt;Residuals&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;421.92&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;28&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;15.07&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;&lt;/td&gt;
      &lt;td class=&#34;gt_row gt_center&#34;&gt;      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot class=&#34;gt_sourcenotes&#34;&gt;&lt;/tfoot&gt;
  
&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level2 unnumbered&#34;&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;div id=&#34;refs&#34; class=&#34;references&#34;&gt;
&lt;div id=&#34;ref-param&#34;&gt;
&lt;p&gt;Lüdecke, Daniel, Mattan S. Ben-Shachar, Indrajeet Patil, and Dominique Makowski. 2020. “Parameters: Extracting, Computing and Exploring the Parameters of Statistical Models Using R.” &lt;em&gt;Journal of Open Source Software&lt;/em&gt; 5 (53): 2445. &lt;a href=&#34;https://doi.org/10.21105/joss.02445&#34;&gt;https://doi.org/10.21105/joss.02445&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Highlight data points in a scatterplot</title>
      <link>https://thiyanga.netlify.app/post/scatterplot/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/scatterplot/</guid>
      <description>


&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/highlight.jpg&#34; alt=&#34;final image&#34; width=&#34;700&#34;/&gt;&lt;/p&gt;
&lt;div id=&#34;step-1-load-libraries&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Step 1: Load Libraries&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-2-dataset&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Step 2: Dataset&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(20201215)
df &amp;lt;- tibble::tibble(x=rnorm(100), y=rnorm(100))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we are going to work on our scatterplot.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-3-first-draw-a-scatterplot-with-your-full-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Step 3: First draw a scatterplot with your full data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x=x, y=y)) + 
  geom_point() + 
  coord_equal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/scatterplot_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-4-store-the-points-that-you-need-to-highlight-in-a-new-data.frame-or-tibble.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Step 4: Store the points that you need to highlight in a new &lt;code&gt;data.frame&lt;/code&gt; or &lt;code&gt;tibble&lt;/code&gt;.&lt;/h1&gt;
&lt;p&gt;Suppose I want to highlight 5th, 10th and 15th points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df2 &amp;lt;- df[c(5, 10, 15), ]
df2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 3 × 2
       x      y
   &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
1  0.646 -3.30 
2  2.54  -0.732
3 -0.383  0.855&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-5-now-you-need-to-inform-above-points-to-the-ggplot-through-another-geom_point-layer.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Step 5: Now you need to inform above points to the ggplot through another &lt;code&gt;geom_point&lt;/code&gt; layer.&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x=x, y=y)) + 
  geom_point() + 
  coord_equal() + 
  geom_point(data=df2, aes(x=x, y=y), colour=&amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/scatterplot_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can change the size by passing a value to &lt;code&gt;size&lt;/code&gt; argument.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x=x, y=y)) + 
  geom_point() + 
  coord_equal() + 
  geom_point(data=df2, aes(x=x, y=y), 
             colour=&amp;quot;red&amp;quot;, 
             size=5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/scatterplot_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can circle around the points by using the following command.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x=x, y=y)) + 
  geom_point() + 
  coord_equal() + 
  geom_point(data=df2, aes(x=x, y=y), pch=21, 
             fill=NA, size=4, 
             colour=&amp;quot;red&amp;quot;, stroke=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/scatterplot_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Import data into R: Overwritten object names</title>
      <link>https://thiyanga.netlify.app/post/loaddatasets/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/loaddatasets/</guid>
      <description>


&lt;div id=&#34;spotting-the-problem&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Spotting the problem&lt;/h2&gt;
&lt;p&gt;First, I create a small dataset for the demonstration. The following dataset represents the Happiness index for five countries.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;happy &amp;lt;- data.frame(
  country = c(&amp;quot;Finland&amp;quot;, &amp;quot;Norway&amp;quot;, &amp;quot;Denmark&amp;quot;, &amp;quot;Iceland&amp;quot;, &amp;quot;Netherlands&amp;quot;),
  score = c(7.76, 7.60, 7.55, 7.49, 7.48))

happy&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;      country score
1     Finland  7.76
2      Norway  7.60
3     Denmark  7.55
4     Iceland  7.49
5 Netherlands  7.48&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Save the dataset as shown below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;save(happy, file=&amp;quot;happyindex.rda&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s load the dataset with,&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;load(&amp;quot;happyindex.rda&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;happyindex&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following error message pops up,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error: object ‘happyindex’ not found&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;tackling-the-problem&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tackling the problem&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;loadHappy &amp;lt;- load(&amp;quot;happyindex.rda&amp;quot;)
happyDataloaded &amp;lt;- get(loadHappy)
happyDataloaded&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Working with built-in data sets in R</title>
      <link>https://thiyanga.netlify.app/post/datasets/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/datasets/</guid>
      <description>


&lt;div id=&#34;to-view-list-of-data-sets-available-in-a-particular-package-or-a-group-of-packages.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;To view list of data sets available in a particular package or a group of packages.&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vcdExtra::datasets(c(&amp;quot;ggplot2&amp;quot;, &amp;quot;forecast&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Loading package: ggplot2 
Loading package: forecast &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    Package           Item      class      dim
1   ggplot2       diamonds data.frame 53940x10
2   ggplot2      economics data.frame    574x6
3   ggplot2 economics_long data.frame   2870x4
4   ggplot2      faithfuld data.frame   5625x3
5   ggplot2    luv_colours data.frame    657x4
6   ggplot2        midwest data.frame   437x28
7   ggplot2            mpg data.frame   234x11
8   ggplot2         msleep data.frame    83x11
9   ggplot2   presidential data.frame     11x4
10  ggplot2          seals data.frame   1155x4
11  ggplot2      txhousing data.frame   8602x9
12 forecast            gas         ts      476
13 forecast           gold         ts     1108
14 forecast         taylor         ts     4032
15 forecast        wineind         ts      176
16 forecast       woolyrnq         ts      119
                                                               Title
1                           Prices of over 50,000 round cut diamonds
2                                            US economic time series
3                                            US economic time series
4                           2d density estimate of Old Faithful data
5                                            &amp;#39;colors()&amp;#39; in Luv space
6                                               Midwest demographics
7  Fuel economy data from 1999 to 2008 for 38 popular models of cars
8       An updated and expanded version of the mammals sleep dataset
9                    Terms of 11 presidents from Eisenhower to Obama
10                                    Vector field of seal movements
11                                               Housing sales in TX
12                                 Australian monthly gas production
13                                         Daily morning gold prices
14                                    Half-hourly electricity demand
15                                       Australian total wine sales
16                 Quarterly production of woollen yarn in Australia&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;to-view-data-sets-in-package-datasets.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;To view data sets in package &lt;code&gt;datasets&lt;/code&gt;.&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This opens a file called “R data sets” in the Code-Editor window as below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/datafiles.PNG&#34; alt=&#34;final image&#34; width=&#34;800&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;to-list-the-data-sets-in-all-available-packages&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;To list the data sets in all &lt;em&gt;available&lt;/em&gt; packages&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;data(package = .packages(all.available = TRUE))&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This opens a file called “R data sets” in the Code- Editor widow, listing datasets as&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Data sets in package ‘alr4’:

...


Data sets in package ‘asbio’:

...

.

.

.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Dashboard to monitor COVID-19 situation in Sri Lanka</title>
      <link>https://thiyanga.netlify.app/post/covid19/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/covid19/</guid>
      <description>&lt;p&gt;Visit here: &lt;a href=&#34;https://statisticsmart.shinyapps.io/coronaSLDashboard/#section-summary&#34;&gt;https://statisticsmart.shinyapps.io/coronaSLDashboard/#section-summary&lt;/a&gt;&lt;/p&gt;
&lt;img src=&#34;https://thiyanga.netlify.app/post/covid.png&#34; alt=&#34;final image&#34; width=&#34;800&#34;/&gt;
&lt;iframe width=&#34;1000&#34; height=&#34;600&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34;  src=&#34;https://statisticsmart.shinyapps.io/coronaSLDashboard/#section-summary&#34;&gt; &lt;/iframe&gt;
&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;
&lt;p&gt;The code behind this dashboard is available on &lt;a href=&#34;https://github.com/thiyangt/CoronaSriLanka&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;
&lt;p&gt;The raw data is pulled from the Johns Hopkins University Center for Systems Science and Engineering (JHU CCSE) Coronavirus repository (through corona package in R) and Covid-19 Situation reports published by Epidemiology Unit, Ministry of Health and Indigenous Medical Services, Sri Lanka.&lt;/p&gt;
&lt;h2 id=&#34;update&#34;&gt;Update&lt;/h2&gt;
&lt;p&gt;The map data is as of Sunday March 22, 2020 and the dashboard has been updated on Friday March 27, 2020.&lt;/p&gt;
&lt;h2 id=&#34;to-explore-global-trend-use-rami-krispins-dashboard&#34;&gt;To explore Global trend use Rami Krispin&amp;rsquo;s dashboard&lt;/h2&gt;
&lt;p&gt;Visit: &lt;a href=&#34;https://ramikrispin.github.io/coronavirus_dashboard/&#34;&gt;https://ramikrispin.github.io/coronavirus_dashboard/&lt;/a&gt;&lt;/p&gt;
&lt;iframe width=&#34;1000&#34; height=&#34;600&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34;  src=&#34;https://ramikrispin.github.io/coronavirus_dashboard/&#34;&gt; &lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Summarizing with dplyr</title>
      <link>https://thiyanga.netlify.app/post/dplyr/</link>
      <pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/dplyr/</guid>
      <description>


&lt;p&gt;Packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Load &lt;code&gt;iris&lt;/code&gt; data set&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(&amp;quot;iris&amp;quot;)
head(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;summarise-to-summarize-only-a-single-column&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;summarise&lt;/code&gt;: to summarize only a single column&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% group_by(Species) %&amp;gt;% summarise(mean(Sepal.Length))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` ungrouping output (override with `.groups` argument)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##   Species    `mean(Sepal.Length)`
##   &amp;lt;fct&amp;gt;                     &amp;lt;dbl&amp;gt;
## 1 setosa                     5.01
## 2 versicolor                 5.94
## 3 virginica                  6.59&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;summarise_all-to-summarize-all-columns&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;summarise_all&lt;/code&gt;: to summarize all columns&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% group_by(Species) %&amp;gt;% summarise_all(.funs = c(mean=&amp;quot;mean&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
##   Species   Sepal.Length_mean Sepal.Width_mean Petal.Length_me… Petal.Width_mean
##   &amp;lt;fct&amp;gt;                 &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1 setosa                 5.01             3.43             1.46            0.246
## 2 versicol…              5.94             2.77             4.26            1.33 
## 3 virginica              6.59             2.97             5.55            2.03&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;summarise_at-to-summarize-only-certain-columns&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;summarise_at&lt;/code&gt;: to summarize only certain columns&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% group_by(Species) %&amp;gt;% summarise_at(
  .vars = vars(Sepal.Length, Sepal.Width),
  .funs = c(mean=&amp;quot;mean&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   Species    Sepal.Length_mean Sepal.Width_mean
##   &amp;lt;fct&amp;gt;                  &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1 setosa                  5.01             3.43
## 2 versicolor              5.94             2.77
## 3 virginica               6.59             2.97&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;summarise_if&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;summarise_if&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% group_by(Species) %&amp;gt;% 
  summarise_if(.predicate = function(x) is.numeric(x),
               .funs = funs(mean=&amp;quot;mean&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `funs()` is deprecated as of dplyr 0.8.0.
## Please use a list of either functions or lambdas: 
## 
##   # Simple named list: 
##   list(mean = mean, median = median)
## 
##   # Auto named with `tibble::lst()`: 
##   tibble::lst(mean, median)
## 
##   # Using lambdas
##   list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))
## This warning is displayed once every 8 hours.
## Call `lifecycle::last_warnings()` to see where this warning was generated.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
##   Species   Sepal.Length_mean Sepal.Width_mean Petal.Length_me… Petal.Width_mean
##   &amp;lt;fct&amp;gt;                 &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1 setosa                 5.01             3.43             1.46            0.246
## 2 versicol…              5.94             2.77             4.26            1.33 
## 3 virginica              6.59             2.97             5.55            2.03&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;pass multiple functions&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% group_by(Species) %&amp;gt;% 
  summarise_if(.predicate = function(x) is.numeric(x),
               .funs = funs(mean=&amp;quot;mean&amp;quot;, Sd=&amp;quot;sd&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 9
##   Species Sepal.Length_me… Sepal.Width_mean Petal.Length_me… Petal.Width_mean
##   &amp;lt;fct&amp;gt;              &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1 setosa              5.01             3.43             1.46            0.246
## 2 versic…             5.94             2.77             4.26            1.33 
## 3 virgin…             6.59             2.97             5.55            2.03 
## # … with 4 more variables: Sepal.Length_Sd &amp;lt;dbl&amp;gt;, Sepal.Width_Sd &amp;lt;dbl&amp;gt;,
## #   Petal.Length_Sd &amp;lt;dbl&amp;gt;, Petal.Width_Sd &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How to install and load multiple packages at once?</title>
      <link>https://thiyanga.netlify.app/post/multiplepkg/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/multiplepkg/</guid>
      <description>


&lt;style type=&#34;text/css&#34;&gt;
h2 { /* Header 2 */
    font-size: 22px;
  color: DarkBlue;
}
&lt;/style&gt;
&lt;div id=&#34;install-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;install packages&lt;/h2&gt;
&lt;p&gt;To install multiple packages with a single call to &lt;code&gt;install.packages&lt;/code&gt;, pass the names of the packages as a character vector to the install.packages() function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(c(&amp;quot;gganimate&amp;quot;, &amp;quot;tidyverse&amp;quot;, &amp;quot;gapminder&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;load-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;load packages&lt;/h2&gt;
&lt;p&gt;Once you have the packages installed, you can make their contents available to use in your current R session by running,&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lapply(c(&amp;quot;gganimate&amp;quot;, &amp;quot;tidyverse&amp;quot;, &amp;quot;gapminder&amp;quot;), require, character.only = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
## [1] TRUE
## 
## [[2]]
## [1] TRUE
## 
## [[3]]
## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;check-and-install-missing-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;check and install missing packages&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;list.of.packages &amp;lt;- c(&amp;quot;gganimate&amp;quot;, &amp;quot;tidyverse&amp;quot;, &amp;quot;gapminder&amp;quot;)
new.packages &amp;lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&amp;quot;Package&amp;quot;])]
if(length(new.packages)) install.packages(new.packages)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;for-other-alternatives-see&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;For other alternatives see&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;http://dirk.eddelbuettel.com/code/littler.html&#34;&gt;littler&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(littler)
install.r EIAdata gdata ggmap ggplot2 &lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/stevenworthington/3178163&#34;&gt;ipak&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ipak &amp;lt;- function(pkg){
    new.pkg &amp;lt;- pkg[!(pkg %in% installed.packages()[, &amp;quot;Package&amp;quot;])]
    if (length(new.pkg)) 
        install.packages(new.pkg, dependencies = TRUE)
    sapply(pkg, require, character.only = TRUE)
}

# usage
packages &amp;lt;- c(&amp;quot;gganimate&amp;quot;, &amp;quot;tidyverse&amp;quot;, &amp;quot;gapminder&amp;quot;)
ipak(packages)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## gganimate tidyverse gapminder 
##      TRUE      TRUE      TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/easypackages/README.html&#34;&gt;easypackages&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Some useful Greek letters you might use on your reports</title>
      <link>https://thiyanga.netlify.app/post/greekletters/</link>
      <pubDate>Tue, 29 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/greekletters/</guid>
      <description>


&lt;table&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;alpha&lt;/strong&gt;:&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;beta&lt;/strong&gt;:&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;gamma&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;delta&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\alpha&lt;/code&gt; : &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\beta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\gamma&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\gamma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\delta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\delta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Gamma&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\Gamma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Delta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\Delta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;epsilon&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Zeta&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;eta&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;theta&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\epsilon&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\epsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\zeta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\zeta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\eta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\eta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\theta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\varepsilon&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\varepsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Theta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\Theta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;iota&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;kappa&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;lambda&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;mu&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\iota&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\iota\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\kappa:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\kappa\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\lambda:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\mu:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;nu&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;xi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;pi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;rho&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\nu:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\nu\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\xi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\xi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\pi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\rho:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\rho\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Xi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Xi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Pi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Pi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;sigma&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;upsilon&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;phi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;omicron&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\sigma:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\upsilon:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\upsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\phi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\omicron:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\omicron\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\Sigma:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Sigma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Phi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Phi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;tau&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;chi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;psi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Omega&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\tau:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\tau\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\chi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\chi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\psi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\psi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\omega:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\omega\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Psi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Psi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Omega:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Omega\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s in a package?</title>
      <link>https://thiyanga.netlify.app/post/packageinfo/</link>
      <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/packageinfo/</guid>
      <description>


&lt;p&gt;Sometimes we need to view all the functions that are built into an R package.
This is done in the same way you would list variables in your workspace, using the &lt;code&gt;ls&lt;/code&gt; function. Note that the package must be loaded before you run the &lt;code&gt;ls&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt; Getting a list of functions inside the &lt;code&gt;dplyr&lt;/code&gt; package&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
ls(&amp;quot;package:dplyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [1] &amp;quot;%&amp;gt;%&amp;quot;                   &amp;quot;across&amp;quot;                &amp;quot;add_count&amp;quot;            
##   [4] &amp;quot;add_count_&amp;quot;            &amp;quot;add_row&amp;quot;               &amp;quot;add_rownames&amp;quot;         
##   [7] &amp;quot;add_tally&amp;quot;             &amp;quot;add_tally_&amp;quot;            &amp;quot;all_equal&amp;quot;            
##  [10] &amp;quot;all_of&amp;quot;                &amp;quot;all_vars&amp;quot;              &amp;quot;anti_join&amp;quot;            
##  [13] &amp;quot;any_of&amp;quot;                &amp;quot;any_vars&amp;quot;              &amp;quot;arrange&amp;quot;              
##  [16] &amp;quot;arrange_&amp;quot;              &amp;quot;arrange_all&amp;quot;           &amp;quot;arrange_at&amp;quot;           
##  [19] &amp;quot;arrange_if&amp;quot;            &amp;quot;as_data_frame&amp;quot;         &amp;quot;as_label&amp;quot;             
##  [22] &amp;quot;as_tibble&amp;quot;             &amp;quot;as.tbl&amp;quot;                &amp;quot;auto_copy&amp;quot;            
##  [25] &amp;quot;band_instruments&amp;quot;      &amp;quot;band_instruments2&amp;quot;     &amp;quot;band_members&amp;quot;         
##  [28] &amp;quot;bench_tbls&amp;quot;            &amp;quot;between&amp;quot;               &amp;quot;bind_cols&amp;quot;            
##  [31] &amp;quot;bind_rows&amp;quot;             &amp;quot;c_across&amp;quot;              &amp;quot;case_when&amp;quot;            
##  [34] &amp;quot;changes&amp;quot;               &amp;quot;check_dbplyr&amp;quot;          &amp;quot;coalesce&amp;quot;             
##  [37] &amp;quot;collapse&amp;quot;              &amp;quot;collect&amp;quot;               &amp;quot;combine&amp;quot;              
##  [40] &amp;quot;common_by&amp;quot;             &amp;quot;compare_tbls&amp;quot;          &amp;quot;compare_tbls2&amp;quot;        
##  [43] &amp;quot;compute&amp;quot;               &amp;quot;contains&amp;quot;              &amp;quot;copy_to&amp;quot;              
##  [46] &amp;quot;count&amp;quot;                 &amp;quot;count_&amp;quot;                &amp;quot;cumall&amp;quot;               
##  [49] &amp;quot;cumany&amp;quot;                &amp;quot;cume_dist&amp;quot;             &amp;quot;cummean&amp;quot;              
##  [52] &amp;quot;cur_column&amp;quot;            &amp;quot;cur_data&amp;quot;              &amp;quot;cur_data_all&amp;quot;         
##  [55] &amp;quot;cur_group&amp;quot;             &amp;quot;cur_group_id&amp;quot;          &amp;quot;cur_group_rows&amp;quot;       
##  [58] &amp;quot;current_vars&amp;quot;          &amp;quot;data_frame&amp;quot;            &amp;quot;data_frame_&amp;quot;          
##  [61] &amp;quot;db_analyze&amp;quot;            &amp;quot;db_begin&amp;quot;              &amp;quot;db_commit&amp;quot;            
##  [64] &amp;quot;db_create_index&amp;quot;       &amp;quot;db_create_indexes&amp;quot;     &amp;quot;db_create_table&amp;quot;      
##  [67] &amp;quot;db_data_type&amp;quot;          &amp;quot;db_desc&amp;quot;               &amp;quot;db_drop_table&amp;quot;        
##  [70] &amp;quot;db_explain&amp;quot;            &amp;quot;db_has_table&amp;quot;          &amp;quot;db_insert_into&amp;quot;       
##  [73] &amp;quot;db_list_tables&amp;quot;        &amp;quot;db_query_fields&amp;quot;       &amp;quot;db_query_rows&amp;quot;        
##  [76] &amp;quot;db_rollback&amp;quot;           &amp;quot;db_save_query&amp;quot;         &amp;quot;db_write_table&amp;quot;       
##  [79] &amp;quot;dense_rank&amp;quot;            &amp;quot;desc&amp;quot;                  &amp;quot;dim_desc&amp;quot;             
##  [82] &amp;quot;distinct&amp;quot;              &amp;quot;distinct_&amp;quot;             &amp;quot;distinct_all&amp;quot;         
##  [85] &amp;quot;distinct_at&amp;quot;           &amp;quot;distinct_if&amp;quot;           &amp;quot;distinct_prepare&amp;quot;     
##  [88] &amp;quot;do&amp;quot;                    &amp;quot;do_&amp;quot;                   &amp;quot;dplyr_col_modify&amp;quot;     
##  [91] &amp;quot;dplyr_reconstruct&amp;quot;     &amp;quot;dplyr_row_slice&amp;quot;       &amp;quot;ends_with&amp;quot;            
##  [94] &amp;quot;enexpr&amp;quot;                &amp;quot;enexprs&amp;quot;               &amp;quot;enquo&amp;quot;                
##  [97] &amp;quot;enquos&amp;quot;                &amp;quot;ensym&amp;quot;                 &amp;quot;ensyms&amp;quot;               
## [100] &amp;quot;eval_tbls&amp;quot;             &amp;quot;eval_tbls2&amp;quot;            &amp;quot;everything&amp;quot;           
## [103] &amp;quot;explain&amp;quot;               &amp;quot;expr&amp;quot;                  &amp;quot;failwith&amp;quot;             
## [106] &amp;quot;filter&amp;quot;                &amp;quot;filter_&amp;quot;               &amp;quot;filter_all&amp;quot;           
## [109] &amp;quot;filter_at&amp;quot;             &amp;quot;filter_if&amp;quot;             &amp;quot;first&amp;quot;                
## [112] &amp;quot;frame_data&amp;quot;            &amp;quot;full_join&amp;quot;             &amp;quot;funs&amp;quot;                 
## [115] &amp;quot;funs_&amp;quot;                 &amp;quot;glimpse&amp;quot;               &amp;quot;group_by&amp;quot;             
## [118] &amp;quot;group_by_&amp;quot;             &amp;quot;group_by_all&amp;quot;          &amp;quot;group_by_at&amp;quot;          
## [121] &amp;quot;group_by_drop_default&amp;quot; &amp;quot;group_by_if&amp;quot;           &amp;quot;group_by_prepare&amp;quot;     
## [124] &amp;quot;group_cols&amp;quot;            &amp;quot;group_data&amp;quot;            &amp;quot;group_indices&amp;quot;        
## [127] &amp;quot;group_indices_&amp;quot;        &amp;quot;group_keys&amp;quot;            &amp;quot;group_map&amp;quot;            
## [130] &amp;quot;group_modify&amp;quot;          &amp;quot;group_nest&amp;quot;            &amp;quot;group_rows&amp;quot;           
## [133] &amp;quot;group_size&amp;quot;            &amp;quot;group_split&amp;quot;           &amp;quot;group_trim&amp;quot;           
## [136] &amp;quot;group_vars&amp;quot;            &amp;quot;group_walk&amp;quot;            &amp;quot;grouped_df&amp;quot;           
## [139] &amp;quot;groups&amp;quot;                &amp;quot;id&amp;quot;                    &amp;quot;ident&amp;quot;                
## [142] &amp;quot;if_else&amp;quot;               &amp;quot;inner_join&amp;quot;            &amp;quot;intersect&amp;quot;            
## [145] &amp;quot;is_grouped_df&amp;quot;         &amp;quot;is.grouped_df&amp;quot;         &amp;quot;is.src&amp;quot;               
## [148] &amp;quot;is.tbl&amp;quot;                &amp;quot;lag&amp;quot;                   &amp;quot;last&amp;quot;                 
## [151] &amp;quot;last_col&amp;quot;              &amp;quot;lead&amp;quot;                  &amp;quot;left_join&amp;quot;            
## [154] &amp;quot;location&amp;quot;              &amp;quot;lst&amp;quot;                   &amp;quot;lst_&amp;quot;                 
## [157] &amp;quot;make_tbl&amp;quot;              &amp;quot;matches&amp;quot;               &amp;quot;min_rank&amp;quot;             
## [160] &amp;quot;mutate&amp;quot;                &amp;quot;mutate_&amp;quot;               &amp;quot;mutate_all&amp;quot;           
## [163] &amp;quot;mutate_at&amp;quot;             &amp;quot;mutate_each&amp;quot;           &amp;quot;mutate_each_&amp;quot;         
## [166] &amp;quot;mutate_if&amp;quot;             &amp;quot;n&amp;quot;                     &amp;quot;n_distinct&amp;quot;           
## [169] &amp;quot;n_groups&amp;quot;              &amp;quot;na_if&amp;quot;                 &amp;quot;near&amp;quot;                 
## [172] &amp;quot;nest_by&amp;quot;               &amp;quot;nest_join&amp;quot;             &amp;quot;new_grouped_df&amp;quot;       
## [175] &amp;quot;nth&amp;quot;                   &amp;quot;ntile&amp;quot;                 &amp;quot;num_range&amp;quot;            
## [178] &amp;quot;one_of&amp;quot;                &amp;quot;order_by&amp;quot;              &amp;quot;percent_rank&amp;quot;         
## [181] &amp;quot;progress_estimated&amp;quot;    &amp;quot;pull&amp;quot;                  &amp;quot;quo&amp;quot;                  
## [184] &amp;quot;quo_name&amp;quot;              &amp;quot;quos&amp;quot;                  &amp;quot;recode&amp;quot;               
## [187] &amp;quot;recode_factor&amp;quot;         &amp;quot;relocate&amp;quot;              &amp;quot;rename&amp;quot;               
## [190] &amp;quot;rename_&amp;quot;               &amp;quot;rename_all&amp;quot;            &amp;quot;rename_at&amp;quot;            
## [193] &amp;quot;rename_if&amp;quot;             &amp;quot;rename_vars&amp;quot;           &amp;quot;rename_vars_&amp;quot;         
## [196] &amp;quot;rename_with&amp;quot;           &amp;quot;right_join&amp;quot;            &amp;quot;row_number&amp;quot;           
## [199] &amp;quot;rows_delete&amp;quot;           &amp;quot;rows_insert&amp;quot;           &amp;quot;rows_patch&amp;quot;           
## [202] &amp;quot;rows_update&amp;quot;           &amp;quot;rows_upsert&amp;quot;           &amp;quot;rowwise&amp;quot;              
## [205] &amp;quot;same_src&amp;quot;              &amp;quot;sample_frac&amp;quot;           &amp;quot;sample_n&amp;quot;             
## [208] &amp;quot;select&amp;quot;                &amp;quot;select_&amp;quot;               &amp;quot;select_all&amp;quot;           
## [211] &amp;quot;select_at&amp;quot;             &amp;quot;select_if&amp;quot;             &amp;quot;select_var&amp;quot;           
## [214] &amp;quot;select_vars&amp;quot;           &amp;quot;select_vars_&amp;quot;          &amp;quot;semi_join&amp;quot;            
## [217] &amp;quot;setdiff&amp;quot;               &amp;quot;setequal&amp;quot;              &amp;quot;show_query&amp;quot;           
## [220] &amp;quot;slice&amp;quot;                 &amp;quot;slice_&amp;quot;                &amp;quot;slice_head&amp;quot;           
## [223] &amp;quot;slice_max&amp;quot;             &amp;quot;slice_min&amp;quot;             &amp;quot;slice_sample&amp;quot;         
## [226] &amp;quot;slice_tail&amp;quot;            &amp;quot;sql&amp;quot;                   &amp;quot;sql_escape_ident&amp;quot;     
## [229] &amp;quot;sql_escape_string&amp;quot;     &amp;quot;sql_join&amp;quot;              &amp;quot;sql_select&amp;quot;           
## [232] &amp;quot;sql_semi_join&amp;quot;         &amp;quot;sql_set_op&amp;quot;            &amp;quot;sql_subquery&amp;quot;         
## [235] &amp;quot;sql_translate_env&amp;quot;     &amp;quot;src&amp;quot;                   &amp;quot;src_df&amp;quot;               
## [238] &amp;quot;src_local&amp;quot;             &amp;quot;src_mysql&amp;quot;             &amp;quot;src_postgres&amp;quot;         
## [241] &amp;quot;src_sqlite&amp;quot;            &amp;quot;src_tbls&amp;quot;              &amp;quot;starts_with&amp;quot;          
## [244] &amp;quot;starwars&amp;quot;              &amp;quot;storms&amp;quot;                &amp;quot;summarise&amp;quot;            
## [247] &amp;quot;summarise_&amp;quot;            &amp;quot;summarise_all&amp;quot;         &amp;quot;summarise_at&amp;quot;         
## [250] &amp;quot;summarise_each&amp;quot;        &amp;quot;summarise_each_&amp;quot;       &amp;quot;summarise_if&amp;quot;         
## [253] &amp;quot;summarize&amp;quot;             &amp;quot;summarize_&amp;quot;            &amp;quot;summarize_all&amp;quot;        
## [256] &amp;quot;summarize_at&amp;quot;          &amp;quot;summarize_each&amp;quot;        &amp;quot;summarize_each_&amp;quot;      
## [259] &amp;quot;summarize_if&amp;quot;          &amp;quot;sym&amp;quot;                   &amp;quot;syms&amp;quot;                 
## [262] &amp;quot;tally&amp;quot;                 &amp;quot;tally_&amp;quot;                &amp;quot;tbl&amp;quot;                  
## [265] &amp;quot;tbl_df&amp;quot;                &amp;quot;tbl_nongroup_vars&amp;quot;     &amp;quot;tbl_ptype&amp;quot;            
## [268] &amp;quot;tbl_sum&amp;quot;               &amp;quot;tbl_vars&amp;quot;              &amp;quot;tibble&amp;quot;               
## [271] &amp;quot;top_frac&amp;quot;              &amp;quot;top_n&amp;quot;                 &amp;quot;transmute&amp;quot;            
## [274] &amp;quot;transmute_&amp;quot;            &amp;quot;transmute_all&amp;quot;         &amp;quot;transmute_at&amp;quot;         
## [277] &amp;quot;transmute_if&amp;quot;          &amp;quot;tribble&amp;quot;               &amp;quot;trunc_mat&amp;quot;            
## [280] &amp;quot;type_sum&amp;quot;              &amp;quot;ungroup&amp;quot;               &amp;quot;union&amp;quot;                
## [283] &amp;quot;union_all&amp;quot;             &amp;quot;validate_grouped_df&amp;quot;   &amp;quot;vars&amp;quot;                 
## [286] &amp;quot;with_groups&amp;quot;           &amp;quot;with_order&amp;quot;            &amp;quot;wrap_dbplyr_obj&amp;quot;&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Customizing boxplots with ggplot2</title>
      <link>https://thiyanga.netlify.app/post/blog/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://thiyanga.netlify.app/post/blog/</guid>
      <description>&lt;p&gt;Boxplot is probably one of the most common type of graphics. This will show how to customize boxplots.&lt;/p&gt;
&lt;p&gt;You will learn,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;how to change the order of labels&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;how to change the colours&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;how to flip coordinates&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Step 1: we create a simple data set.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Gender &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Male&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Female&amp;#34;&lt;/span&gt;), times &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, each &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Quality &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rep&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Taste&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Color of package&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Capacity&amp;#34;&lt;/span&gt;), times &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, each &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accepted &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seq&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DF &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data.frame&lt;/span&gt;(Gender, Quality, Accepted)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(DF)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;##   Gender Quality  Accepted
## 1   Male   Taste  0.000000
## 2   Male   Taste  4.347826
## 3   Male   Taste  8.695652
## 4   Male   Taste 13.043478
## 5 Female   Taste 17.391304
## 6 Female   Taste 21.739130
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Step 2: Generate a simple boxplot with ggplot&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggplot2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(DF, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Quality, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Accepted, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Gender)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_boxplot&lt;/span&gt;() 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/boxplot_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;
&lt;p&gt;Step 3: Change the colours, legend position and x-axis order&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(DF, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Quality, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Accepted, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Gender)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_boxplot&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;xlab&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;top&amp;#34;&lt;/span&gt;, legend.title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_discrete&lt;/span&gt;(limits&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Taste&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Color of package&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Capacity&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/boxplot_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;
&lt;p&gt;Step 4: Change the plotting order: first you have to include &lt;code&gt;factor&lt;/code&gt; code to set the order of the levels.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DF&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Gender_factor &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(DF&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;Gender, levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Male&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Female&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(DF, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Quality, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Accepted, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Gender_factor)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_boxplot&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;xlab&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;top&amp;#34;&lt;/span&gt;, legend.title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_discrete&lt;/span&gt;(limits&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Taste&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Color of package&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Capacity&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/boxplot_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;
&lt;p&gt;Step 5: Horizontal bar chart: coord_flip()&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(DF, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Quality, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Accepted, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Gender)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_boxplot&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;xlab&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;top&amp;#34;&lt;/span&gt;, legend.title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;coord_flip&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_discrete&lt;/span&gt;(limits&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Taste&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Color of package&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Capacity&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/boxplot_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;
&lt;p&gt;step 6: Change the legend order similar to plot order: under themes &lt;code&gt;fill=guide_legend(reverse=FALSE)&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(DF, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Quality, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Accepted, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Gender)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_boxplot&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_fill_manual&lt;/span&gt;(values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;orange&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;xlab&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;top&amp;#34;&lt;/span&gt;, legend.title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element_blank&lt;/span&gt;()) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;guide_legend&lt;/span&gt;(reverse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;coord_flip&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_discrete&lt;/span&gt;(limits&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Taste&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Color of package&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Capacity&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;https://thiyanga.netlify.app/post/boxplot_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;
</description>
    </item>
    
  </channel>
</rss>
