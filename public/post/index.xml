<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | THIYANGA TALAGALA</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 09 Feb 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>Organize your priorities using CalendaR package in R</title>
      <link>/post/calendar/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      <guid>/post/calendar/</guid>
      <description>


&lt;p&gt;It is important to maintain a calendar in order to budget your time well. In this post, I will show you some basic functionalities of &lt;code&gt;calendaR&lt;/code&gt; package in R. You can find more information &lt;a href=&#34;https://r-coder.com/calendar-plot-r/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;load-package&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Load package&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(calendR)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;load-calendar---2021&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;1. Load calendar - 2021&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;calendR(year = 2021, # Set the year
        start = &amp;quot;M&amp;quot;,  # Set the first day of the calendar week as Monday (optional argument)
        special.days = &amp;quot;weekend&amp;quot;, # Colour  weekends (optional argument)
        special.col = &amp;quot;#b2df8a&amp;quot;) # background colour for weekends (optional arguments)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/calendar_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;mark-events&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2. Mark events&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;events &amp;lt;- rep(NA, 365)

# Event dates
events[100:200] &amp;lt;- &amp;quot;2nd semester&amp;quot;
events[213:240] &amp;lt;- &amp;quot;Examination&amp;quot;
events[300:310] &amp;lt;- &amp;quot;Conference&amp;quot;
events[359] &amp;lt;- &amp;quot;Christmas&amp;quot; 

calendR(year = 2021,
        special.days = events,
        start = &amp;quot;M&amp;quot;, 
        special.col = c(&amp;quot;#1b9e77&amp;quot;, &amp;quot;#d95f02&amp;quot;, &amp;quot;#7570b3&amp;quot;, &amp;quot;#e7298a&amp;quot;),
        legend.pos = &amp;quot;right&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/calendar_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;monthly-plan&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3. Monthly plan&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;calendR(year = 2021, month = 2,
          text = c(&amp;quot;Exam&amp;quot;, &amp;quot;Exam&amp;quot;, # Event labels
                 &amp;quot;RLadies&amp;quot;), 
        text.pos = c(18, 20, 23), # Events dates texts 
        text.size = 4.5,          # Font size of the labels
        text.col = &amp;quot;#1b9e77&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/calendar_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Ratio matters: change the way you see things!</title>
      <link>/post/ratio/</link>
      <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
      <guid>/post/ratio/</guid>
      <description>


&lt;div id=&#34;how-often-do-you-fix-the-aspect-ratio&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;How often do you fix the aspect ratio?&lt;/h3&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;
&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;
When creating scatterplots, how often do you fix the aspect ratio? &lt;a href=&#34;https://twitter.com/hashtag/RStats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#RStats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/tidyverse?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#tidyverse&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/Python?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Python&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/ggplot2?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ggplot2&lt;/a&gt;
&lt;/p&gt;
— Thiyanga Talagala (&lt;span class=&#34;citation&#34;&gt;@thiyangt&lt;/span&gt;) &lt;a href=&#34;https://twitter.com/thiyangt/status/1292444445015605248?ref_src=twsrc%5Etfw&#34;&gt;August 9, 2020&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;aspect-ratio&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Aspect ratio&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;aspect ratio&lt;/strong&gt; of a plot is the ratio of its height-to-width . The aspect ratio we choose for our graph plays a significant role. The graphs below plot exactly the same data points but they have different aspect ratios.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/ratio_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-aspect-ratio-of-a-plot-can-make-an-influence-on-the-readers-mind.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The aspect-ratio of a plot can make an influence on the reader’s mind.&lt;/h2&gt;
&lt;p&gt;Here is an example. I generate a set of random points inside a unit circle. The equation of the unit circle center at (0, 0) is: &lt;span class=&#34;math inline&#34;&gt;\(x^2+y^2=1\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(2020)
x &amp;lt;- runif(10000, -1, 1)
y &amp;lt;- runif(10000, -1, 1)
fx &amp;lt;- x^2 + y^2
coly &amp;lt;-  ifelse(fx &amp;lt;= 1, 1, 0)
coly &amp;lt;- as.factor(coly)
circle.points &amp;lt;- data.frame(x=x, y=y, coly=coly)
head(circle.points)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;            x          y coly
1  0.29380568 -0.7572887    1
2 -0.21154848  0.2479973    1
3  0.23700363  0.4911537    1
4 -0.04621773  0.3838934    1
5 -0.72780563  0.8263328    0
6 -0.86523123 -0.3060675    1&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;without-fixing-aspect-ratio&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Without fixing aspect ratio&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(circle.points, aes(x=x, y=y, col=coly)) + 
   geom_point() +
   scale_colour_manual(values = c(&amp;quot;#e7298a&amp;quot;, &amp;quot;#1b9e77&amp;quot;)) +
   theme(legend.position = &amp;quot;none&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ratio_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;According to the plot above it seems that the region is bounded by a ellipse. However, our points are not generated from an elliptical region.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;aspect-ratio-is-fixed&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Aspect ratio is fixed&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(circle.points, aes(x=x, y=y, col=coly)) + geom_point() +
   scale_colour_manual(values = c(&amp;quot;#e7298a&amp;quot;, &amp;quot;#1b9e77&amp;quot;)) + 
  coord_equal() +
  ggtitle(&amp;quot;Figure 2: Aspect ratio is fixed.&amp;quot;) +  
  theme(legend.position = &amp;quot;none&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ratio_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;When you create the plot by preserving the aspect ratio the region is bounded by a circle.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Highlight data points in a scatterplot</title>
      <link>/post/scatterplot/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      <guid>/post/scatterplot/</guid>
      <description>


&lt;p&gt;&lt;img src=&#34;/post/highlight.jpg&#34; alt=&#34;final image&#34; width=&#34;700&#34;/&gt;&lt;/p&gt;
&lt;div id=&#34;step-1-load-libraries&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Step 1: Load Libraries&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-2-dataset&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Step 2: Dataset&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(20201215)
df &amp;lt;- tibble::tibble(x=rnorm(100), y=rnorm(100))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we are going to work on our scatterplot.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-3-first-draw-a-scatterplot-with-your-full-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Step 3: First draw a scatterplot with your full data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x=x, y=y)) + 
  geom_point() + 
  coord_equal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/scatterplot_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;step-4-store-the-points-that-you-need-to-highlight-in-a-new-data.frame-or-tibble.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Step 4: Store the points that you need to highlight in a new &lt;code&gt;data.frame&lt;/code&gt; or &lt;code&gt;tibble&lt;/code&gt;.&lt;/h1&gt;
&lt;p&gt;Suppose I want to highlight 5th, 10th and 15th points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df2 &amp;lt;- df[c(5, 10, 15), ]
df2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 3 x 2
       x      y
   &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
1  0.646 -3.30 
2  2.54  -0.732
3 -0.383  0.855&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;step-5-now-you-need-to-inform-above-points-to-the-ggplot-through-another-geom_point-layer.&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Step 5: Now you need to inform above points to the ggplot through another &lt;code&gt;geom_point&lt;/code&gt; layer.&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x=x, y=y)) + 
  geom_point() + 
  coord_equal() + 
  geom_point(data=df2, aes(x=x, y=y), colour=&amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/scatterplot_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can change the size by passing a value to &lt;code&gt;size&lt;/code&gt; argument.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x=x, y=y)) + 
  geom_point() + 
  coord_equal() + 
  geom_point(data=df2, aes(x=x, y=y), 
             colour=&amp;quot;red&amp;quot;, 
             size=5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/scatterplot_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can circle around the points by using the following command.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(df, aes(x=x, y=y)) + 
  geom_point() + 
  coord_equal() + 
  geom_point(data=df2, aes(x=x, y=y), pch=21, 
             fill=NA, size=4, 
             colour=&amp;quot;red&amp;quot;, stroke=1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/scatterplot_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Import data into R: Overwritten object names</title>
      <link>/post/loaddatasets/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/loaddatasets/</guid>
      <description>


&lt;div id=&#34;spotting-the-problem&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Spotting the problem&lt;/h2&gt;
&lt;p&gt;First, I create a small dataset for the demonstration. The following dataset represents the Happiness index for five countries.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;happy &amp;lt;- data.frame(
  country = c(&amp;quot;Finland&amp;quot;, &amp;quot;Norway&amp;quot;, &amp;quot;Denmark&amp;quot;, &amp;quot;Iceland&amp;quot;, &amp;quot;Netherlands&amp;quot;),
  score = c(7.76, 7.60, 7.55, 7.49, 7.48))

happy&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;      country score
1     Finland  7.76
2      Norway  7.60
3     Denmark  7.55
4     Iceland  7.49
5 Netherlands  7.48&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Save the dataset as shown below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;save(happy, file=&amp;quot;happyindex.rda&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s load the dataset with,&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;load(&amp;quot;happyindex.rda&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;happyindex&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following error message pops up,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error: object ‘happyindex’ not found&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;tackling-the-problem&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tackling the problem&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;loadHappy &amp;lt;- load(&amp;quot;happyindex.rda&amp;quot;)
happyDataloaded &amp;lt;- get(loadHappy)
happyDataloaded&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Working with built-in data sets in R</title>
      <link>/post/datasets/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/datasets/</guid>
      <description>


&lt;div id=&#34;to-view-list-of-data-sets-available-in-a-particular-package-or-a-group-of-packages.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;To view list of data sets available in a particular package or a group of packages.&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vcdExtra::datasets(c(&amp;quot;ggplot2&amp;quot;, &amp;quot;forecast&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Loading package: ggplot2 
Loading package: forecast &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    Package           Item      class      dim
1   ggplot2       diamonds data.frame 53940x10
2   ggplot2      economics data.frame    574x6
3   ggplot2 economics_long data.frame   2870x4
4   ggplot2      faithfuld data.frame   5625x3
5   ggplot2    luv_colours data.frame    657x4
6   ggplot2        midwest data.frame   437x28
7   ggplot2            mpg data.frame   234x11
8   ggplot2         msleep data.frame    83x11
9   ggplot2   presidential data.frame     11x4
10  ggplot2          seals data.frame   1155x4
11  ggplot2      txhousing data.frame   8602x9
12 forecast            gas         ts      476
13 forecast           gold         ts     1108
14 forecast         taylor         ts     4032
15 forecast        wineind         ts      176
16 forecast       woolyrnq         ts      119
                                                               Title
1                           Prices of over 50,000 round cut diamonds
2                                            US economic time series
3                                            US economic time series
4                           2d density estimate of Old Faithful data
5                                            &amp;#39;colors()&amp;#39; in Luv space
6                                               Midwest demographics
7  Fuel economy data from 1999 to 2008 for 38 popular models of cars
8       An updated and expanded version of the mammals sleep dataset
9                    Terms of 11 presidents from Eisenhower to Obama
10                                    Vector field of seal movements
11                                               Housing sales in TX
12                                 Australian monthly gas production
13                                         Daily morning gold prices
14                                    Half-hourly electricity demand
15                                       Australian total wine sales
16                 Quarterly production of woollen yarn in Australia&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;to-view-data-sets-in-package-datasets.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;To view data sets in package &lt;code&gt;datasets&lt;/code&gt;.&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This opens a file called “R data sets” in the Code-Editor window as below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/datafiles.PNG&#34; alt=&#34;final image&#34; width=&#34;800&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;to-list-the-data-sets-in-all-available-packages&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;To list the data sets in all &lt;em&gt;available&lt;/em&gt; packages&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;data(package = .packages(all.available = TRUE))&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This opens a file called “R data sets” in the Code- Editor widow, listing datasets as&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Data sets in package ‘alr4’:

...


Data sets in package ‘asbio’:

...

.

.

.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Small things matter!</title>
      <link>/post/available/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/available/</guid>
      <description>


&lt;p&gt;Checks whether your package name is taken or available !!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;available&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(available)
available(&amp;quot;seer&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;── seer ───────────────────────────────────────────
Name valid: ✔
Available on CRAN: ✖ 
Available on Bioconductor: ✖
Available on GitHub:  ✖ 
Abbreviations: http://www.abbreviations.com/seer
Wikipedia: https://en.wikipedia.org/wiki/seer
Wiktionary: https://en.wiktionary.org/wiki/seer
Urban Dictionary:
  short for &amp;quot;serious&amp;quot;, common [lingo] between [douche bags] and fags.  other common words are used such as &amp;quot;[yon]&amp;quot; and &amp;quot;non&amp;quot;
  http://seer.urbanup.com/5727698
Sentiment:???&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This means the name &lt;code&gt;seer&lt;/code&gt; is taken in both &lt;a href=&#34;https://cran.r-project.org/web/packages/seer/index.html&#34;&gt;CRAN&lt;/a&gt; and &lt;a href=&#34;https://thiyangt.github.io/seer/&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Parameter, Statistic, Random Variable, Estimator and Estimate</title>
      <link>/post/statterms1/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/post/statterms1/</guid>
      <description>


&lt;p&gt;The most common problem while learning Statistics is that students’ lack of understanding of the basic terminologies, notations, definitions and concepts. Think of Statistics as building blocks, and you need a solid foundation to move forward. Here, I explain five common terms in Statistics: i) Parameter, ii) Statistic, iii) Random Variable, iv) Estimator, v) Estimate and their notations.&lt;/p&gt;
&lt;p&gt;I will start with the definition of Population and Sample.&lt;/p&gt;
&lt;p&gt;A population is a complete collection of individuals/ objects that we are interested in. A sample is a subset of a population.&lt;/p&gt;
&lt;div id=&#34;parameter&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Parameter&lt;/h1&gt;
&lt;p&gt;A parameter is a descriptive measure(numerical value) of the population. Parameters are usually denoted by &lt;a href=&#34;https://thiyanga.netlify.app/post/greekletters/&#34;&gt;Greek&lt;/a&gt; letters.&lt;/p&gt;
&lt;p&gt;Examples of parameters:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt; - population mean&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma^2\)&lt;/span&gt; - population variance&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;statistic&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Statistic&lt;/h1&gt;
&lt;p&gt;A statistic is a descriptive measure of a sample. For example, sample mean, sample standard deviation, etc. We will talk about the notations under estimator and estimate.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;random-variable&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Random Variable&lt;/h1&gt;
&lt;p&gt;Before introducing random variable, let me very shortly recall what is a random experiment and what is a sample space.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;random experiment&lt;/strong&gt; is a physical situation whose outcome cannot be predicted with certainty until it is observed. A random experiment can be repeated as many times as we want under the same conditions (leading to different outcomes). Each one of them a trial. Thus, a trial is a particular performance of a random experiment.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;Sample space&lt;/strong&gt; is a set of all possible outcomes of a random experiment. In this blog post I use &lt;span class=&#34;math inline&#34;&gt;\(\Omega\)&lt;/span&gt; to denote a sample space.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Example 1:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Random Experiment: Tossing of a coin&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sample Space:&lt;/em&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Omega = \{H, T\}\)&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(prob) 
tosscoin(1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  toss1
1     H
2     T&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Example 2:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Random Experiment: Toss a coin three times&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sample Space:&lt;/em&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Omega = \{(H, H, H), (H, H, T), (H, T, H), (T, H, H), (H, T, T), (T, H, T), (T, T, H), (T, T, T)\}\)&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tosscoin(3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  toss1 toss2 toss3
1     H     H     H
2     T     H     H
3     H     T     H
4     T     T     H
5     H     H     T
6     T     H     T
7     H     T     T
8     T     T     T&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Definition: Random Variable&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let &lt;span class=&#34;math inline&#34;&gt;\((\Omega, \mathscr{F}, \mathbb{P})\)&lt;/span&gt; be a probability space. Random variable is a function &lt;span class=&#34;math inline&#34;&gt;\(X: \Omega \rightarrow \mathbb{R}\)&lt;/span&gt; such that &lt;span class=&#34;math inline&#34;&gt;\(\forall B \in \mathcal{B}( \mathbb{R} ): X^{-1}(B) \in \mathscr{F}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;You need Measure Theory knowledge to understand the above definition.&lt;/p&gt;
&lt;p&gt;Loosely speaking a &lt;strong&gt;Random variable&lt;/strong&gt; is a function from the sample space to the real numbers. There are two types of random variables: i) Discrete random variable and ii) Continuous random variable. We use Roman capital letters to denote random variables (&lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(U\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(T\)&lt;/span&gt;, etc.). However, as soon as a variable &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; is observed, the observed values are represented by the corresponding simple Roman letter.&lt;/p&gt;
&lt;p&gt;The notation &lt;span class=&#34;math inline&#34;&gt;\(X(\omega)\)&lt;/span&gt; denotes the numerical value of the random variable X, when the outcome of the experiment is some particular &lt;span class=&#34;math inline&#34;&gt;\(\omega\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;An example will help you to understand how this works. To start with, let’s consider a simple experiment with two possible outcomes: &lt;a href=&#34;(https://en.wikipedia.org/wiki/Polymerase_chain_reaction)&#34;&gt;PCR&lt;/a&gt; test result of a randomly selected individual.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/PCR.PNG&#34; alt=&#34;final image&#34; width=&#34;300&#34;/&gt;&lt;/p&gt;
&lt;p&gt;The random variable &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; can be defined as follows:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Solution 1.1&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sample space&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\Omega = \{Positive, Negative\}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Random variable&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
    X(\omega)= 
\begin{cases}
    0,&amp;amp; \text{if } \omega =  Negative\\
    1,              &amp;amp; \text{if } \omega =  Positive
\end{cases}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/sample_space.PNG&#34; alt=&#34;final image&#34; width=&#34;800&#34;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Solution 1.2&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Simply drop &lt;span class=&#34;math inline&#34;&gt;\(\omega\)&lt;/span&gt; and define the random variable as follows:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
    X= 
\begin{cases}
    0,&amp;amp; \text{if the test result is negative. } \\
    1,              &amp;amp; \text{if the test result is positive.}
\end{cases}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Let’s consider another experiment. The experiment consists in selecting a random undergraduate student in the University during a period of one week, and measuring their height.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/height.PNG&#34; alt=&#34;final image&#34; width=&#34;300&#34;/&gt;&lt;/p&gt;
&lt;p&gt;The random variable &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt; can be defined as follows:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\Omega = \{ \omega: \omega &amp;gt; 0\}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Y(\omega) =  \omega, \text{ } \omega \in \Omega. \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Y = \text{Height in cm.}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;notations-for-random-variables-and-observed-data-in-sampling&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Notations for Random Variables and Observed Data (in Sampling)&lt;/h1&gt;
&lt;p&gt;Suppose you have a random variable &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;. Suppose we repeat the random experiment &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; times. Then the resulting random variables are denoted by &lt;span class=&#34;math inline&#34;&gt;\(X_1, X_2, ..., X_n\)&lt;/span&gt;. All &lt;span class=&#34;math inline&#34;&gt;\(X_i\)&lt;/span&gt;’s have the same distribution as &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;. The random variables &lt;span class=&#34;math inline&#34;&gt;\(X_1, X_2, ..., X_n\)&lt;/span&gt; are collectively referred to as a &lt;strong&gt;random sample&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Let’s try to understand the concept with an example.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
    X_i= 
\begin{cases}
    0,&amp;amp; \text{if the test result of the } i^{th} \text { is negaive } \\
    1,              &amp;amp; \text{if the test result of the } i^{th} \text { is positive, }
\end{cases}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(i = 1, 2, 3, 4, 5.\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We performed the PCR test on randomly selected 5 individuals. We called this sample 1. The results are &lt;span class=&#34;math inline&#34;&gt;\(x_1=1, x_2=0, x_3=0, x_4=1, x_5=1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Prior to obtaining &lt;span class=&#34;math inline&#34;&gt;\(x_1, x_2, x_3, x_4, x_5\)&lt;/span&gt;, there is uncertainty about the values of each &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt;. Because of this
uncertainty, before the results becomes available we view each observation as a random
variable and denote the sample by &lt;span class=&#34;math inline&#34;&gt;\(X_1, X_2, X_3, X_4, X_5\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We again performed the PCR test on another randomly selected 5 individuals. We called this sample 2. Now results are &lt;span class=&#34;math inline&#34;&gt;\(x_1=0, x_2=0, x_3=0, x_4=1, x_5=0\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;You can see observable values for &lt;span class=&#34;math inline&#34;&gt;\(X_1, X_2, X_3, X_4, X_5\)&lt;/span&gt; vary from sample to sample.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/pop_sam.PNG&#34; alt=&#34;final image&#34; width=&#34;800&#34;/&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;estimator-and-estimate&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Estimator and Estimate&lt;/h1&gt;
&lt;p&gt;Distinction between the terms &lt;strong&gt;Estimator&lt;/strong&gt; and &lt;strong&gt;Estimate&lt;/strong&gt; is important.&lt;/p&gt;
&lt;p&gt;Let &lt;span class=&#34;math inline&#34;&gt;\(X_1, X_2, ..., X_n\)&lt;/span&gt; be a random sample from a distribution function &lt;span class=&#34;math inline&#34;&gt;\(f_X(x)\)&lt;/span&gt; that depends on a unknown parameter &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;An estimator is a statistic, &lt;span class=&#34;math inline&#34;&gt;\(T = f(X_1, ..., X_n)\)&lt;/span&gt;, that is used to estimate the unknown unknown parameter, &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;, based on an observed sample of &lt;span class=&#34;math inline&#34;&gt;\(x_1, x_2, ..., x_n\)&lt;/span&gt;. The &lt;span class=&#34;math inline&#34;&gt;\(t=f(x_1, x_2, ..., x_n)\)&lt;/span&gt; is an estimate of &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Estimator: An estimator is always a random variable.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\hat{\theta} = T = f(X_1, ..., X_n)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Estimate: An estimate is a constant.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\hat{\theta} = t = f(x_1, ..., x_n)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Note that we use &lt;span class=&#34;math inline&#34;&gt;\(\hat{\theta}\)&lt;/span&gt; for both estimator and estimate.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Estimator is a function of observable random variables that is used to estimate an unknown parameter &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;. The corresponding estimate is obtained by substituting the observed values to the estimator.&lt;/strong&gt; You can also think of an estimator as the rule (equation) that is used to compute an estimate. For example, the sample mean, &lt;span class=&#34;math inline&#34;&gt;\(\bar{X}\)&lt;/span&gt;, is an estimator that is used to estimate the population mean, &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Below example is useful to understand the concepts.&lt;/p&gt;
&lt;p&gt;Let’s say you wanted to know the mean height of undergraduates in a certain university with a population of 1000 undergraduates. You take a random sample of 10 students and measure their height. The observed values are (in cm) 150, 155, 160, 161, 162, 152, 140, 141, 150, 155. Suppose you want to use sample mean to estimate the population mean.&lt;/p&gt;
&lt;p&gt;The parameter we want to estimate is, &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;, population mean (mean height of the students in the university.).&lt;/p&gt;
&lt;p&gt;There are infinitely many possible estimators for &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;. For example, sample mean, sample median. In this example we use sample mean to estimate &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;. Now, let’s write the estimator using the notations.&lt;/p&gt;
&lt;p&gt;To do this, we first define random variables &lt;span class=&#34;math inline&#34;&gt;\(X_1, X_2, X_3, ..., X_{10}\)&lt;/span&gt; as follows: &lt;span class=&#34;math inline&#34;&gt;\(X_1\)&lt;/span&gt; is the height of the &lt;span class=&#34;math inline&#34;&gt;\(1^{st}\)&lt;/span&gt; chosen person, &lt;span class=&#34;math inline&#34;&gt;\(X_2\)&lt;/span&gt; be the height of the &lt;span class=&#34;math inline&#34;&gt;\(2^{nd}\)&lt;/span&gt; chosen person,…. In general, &lt;span class=&#34;math inline&#34;&gt;\(X_i\)&lt;/span&gt; is the height of the &lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt; student chosen from the population.&lt;/p&gt;
&lt;p&gt;Now we can write the &lt;strong&gt;estimator&lt;/strong&gt; as&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\hat{\mu} = \bar{X}=\frac{X_1 + X_2 + X_3 + ... + X_{10}}{10}.\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;estimate&lt;/strong&gt; is&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\hat{\mu}=152.6\text{ cm}.\]&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(c(150, 155, 160, 161, 162, 152, 140, 141, 150, 155))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 152.6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are not given the observed values of &lt;span class=&#34;math inline&#34;&gt;\(X_1, X_2, X_3, ..., X_{10}\)&lt;/span&gt;, you can write the estimate as&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\hat{\mu} = \frac{x_1 + x_2 + x_3 + ... + x_{10}}{10}.\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The observed value of the estimator varies from sample to sample.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;usage&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Usage&lt;/h1&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Writing distributions&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[X \sim Bin(10, 0.6)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[f_X(x) = P(X=x) = {10\choose x} 0.6^x 0.4^{(10-x)}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[f_X(5) = P(X=5) = {10\choose 5} 0.6^5 0.4^{(10-5)} = 0.37\]&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pbinom(5, 10, 0.6)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 0.3668967&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Calculation of expectations&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[E(\text{Estimator}) = \text{Parameter}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[E(\bar{X}) = \mu\]&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;https://i.creativecommons.org/l/by/4.0/88x31.png&#34; /&gt; This work is
licensed under a &lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/&#34;&gt;Creative Commons Attribution 4.0 International
License&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Happy Women in Maths Day - 12 May 2020</title>
      <link>/post/mathsday2020/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      <guid>/post/mathsday2020/</guid>
      <description>


&lt;p&gt;Nature is my biggest inspiration for my love and passion for mathematics. It is amazing to see how these leaves follow geometry to ensure the surface is optimized for the absorption of sunlight. Indeed, nature is a good Mathematician. All its presentations are well calculated and designed. I see a great artist or a designer inside every Mathematician. Maths will teach you how to hold your brush, how to mix your paints and how to manage your tools for a great design.&lt;/p&gt;
&lt;p&gt;Enjoy the spirit of Mathematics!&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;
&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;
“Nature is my biggest inspiration for my love and passion for mathematics” - meet Dr Thiyanga Talagala &lt;a href=&#34;https://twitter.com/thiyangt?ref_src=twsrc%5Etfw&#34;&gt;&lt;span class=&#34;citation&#34;&gt;@thiyangt&lt;/span&gt;&lt;/a&gt; - a former ACEMS student &lt;a href=&#34;https://twitter.com/MonashEBS?ref_src=twsrc%5Etfw&#34;&gt;&lt;span class=&#34;citation&#34;&gt;@MonashEBS&lt;/span&gt;&lt;/a&gt; and now a lecturer at &lt;a href=&#34;https://twitter.com/usjp?ref_src=twsrc%5Etfw&#34;&gt;&lt;span class=&#34;citation&#34;&gt;@usjp&lt;/span&gt;&lt;/a&gt; - watch her &lt;a href=&#34;https://twitter.com/hashtag/WomenInMaths?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#WomenInMaths&lt;/a&gt; day video: &lt;a href=&#34;https://t.co/wPwAcyVunm&#34;&gt;https://t.co/wPwAcyVunm&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/WomenInSTEM?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#WomenInSTEM&lt;/a&gt; &lt;a href=&#34;https://twitter.com/MonashBusiness?ref_src=twsrc%5Etfw&#34;&gt;&lt;span class=&#34;citation&#34;&gt;@MonashBusiness&lt;/span&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/may12wim?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#may12wim&lt;/a&gt; &lt;a href=&#34;https://t.co/xkWtOb4Rzu&#34;&gt;pic.twitter.com/xkWtOb4Rzu&lt;/a&gt;
&lt;/p&gt;
— 𝘼𝘾𝙀𝙈𝙎 (&lt;span class=&#34;citation&#34;&gt;@ACEMathStats&lt;/span&gt;) &lt;a href=&#34;https://twitter.com/ACEMathStats/status/1259826338623520768?ref_src=twsrc%5Etfw&#34;&gt;May 11, 2020&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;Acknowledgement:&lt;/p&gt;
&lt;p&gt;Australian Mathematical Society&lt;/p&gt;
&lt;p&gt;ACEMS: Australian Research Council Centre of Excellence For Mathematical and Statistical Frontiers&lt;/p&gt;
&lt;p&gt;Tim Macuga from Australian Research Council Centre of Excellence For Mathematical and Statistical Frontiers&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dashboard to monitor COVID-19 situation in Sri Lanka</title>
      <link>/post/covid19/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/covid19/</guid>
      <description>


&lt;p&gt;Visit here: &lt;a href=&#34;https://statisticsmart.shinyapps.io/coronaSLDashboard/#section-summary&#34; class=&#34;uri&#34;&gt;https://statisticsmart.shinyapps.io/coronaSLDashboard/#section-summary&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid.png&#34; alt=&#34;final image&#34; width=&#34;800&#34;/&gt;&lt;/p&gt;
&lt;iframe width=&#34;1000&#34; height=&#34;600&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; src=&#34;https://statisticsmart.shinyapps.io/coronaSLDashboard/#section-summary&#34;&gt;
&lt;/iframe&gt;
&lt;div id=&#34;code&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Code&lt;/h2&gt;
&lt;p&gt;The code behind this dashboard is available on &lt;a href=&#34;https://github.com/thiyangt/CoronaSriLanka&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data&lt;/h2&gt;
&lt;p&gt;The raw data is pulled from the Johns Hopkins University Center for Systems Science and Engineering (JHU CCSE) Coronavirus repository (through corona package in R) and Covid-19 Situation reports published by Epidemiology Unit, Ministry of Health and Indigenous Medical Services, Sri Lanka.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;update&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Update&lt;/h2&gt;
&lt;p&gt;The map data is as of Sunday March 22, 2020 and the dashboard has been updated on Friday March 27, 2020.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;to-explore-global-trend-use-rami-krispins-dashboard&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;To explore Global trend use Rami Krispin’s dashboard&lt;/h2&gt;
&lt;p&gt;Visit: &lt;a href=&#34;https://ramikrispin.github.io/coronavirus_dashboard/&#34; class=&#34;uri&#34;&gt;https://ramikrispin.github.io/coronavirus_dashboard/&lt;/a&gt;&lt;/p&gt;
&lt;iframe width=&#34;1000&#34; height=&#34;600&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; src=&#34;https://ramikrispin.github.io/coronavirus_dashboard/&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Summarizing with dplyr</title>
      <link>/post/dplyr/</link>
      <pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate>
      <guid>/post/dplyr/</guid>
      <description>


&lt;p&gt;Packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Load &lt;code&gt;iris&lt;/code&gt; data set&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(&amp;quot;iris&amp;quot;)
head(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;summarise-to-summarize-only-a-single-column&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;summarise&lt;/code&gt;: to summarize only a single column&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% group_by(Species) %&amp;gt;% summarise(mean(Sepal.Length))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` ungrouping output (override with `.groups` argument)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##   Species    `mean(Sepal.Length)`
##   &amp;lt;fct&amp;gt;                     &amp;lt;dbl&amp;gt;
## 1 setosa                     5.01
## 2 versicolor                 5.94
## 3 virginica                  6.59&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;summarise_all-to-summarize-all-columns&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;summarise_all&lt;/code&gt;: to summarize all columns&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% group_by(Species) %&amp;gt;% summarise_all(.funs = c(mean=&amp;quot;mean&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
##   Species   Sepal.Length_mean Sepal.Width_mean Petal.Length_me… Petal.Width_mean
##   &amp;lt;fct&amp;gt;                 &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1 setosa                 5.01             3.43             1.46            0.246
## 2 versicol…              5.94             2.77             4.26            1.33 
## 3 virginica              6.59             2.97             5.55            2.03&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;summarise_at-to-summarize-only-certain-columns&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;summarise_at&lt;/code&gt;: to summarize only certain columns&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% group_by(Species) %&amp;gt;% summarise_at(
  .vars = vars(Sepal.Length, Sepal.Width),
  .funs = c(mean=&amp;quot;mean&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   Species    Sepal.Length_mean Sepal.Width_mean
##   &amp;lt;fct&amp;gt;                  &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1 setosa                  5.01             3.43
## 2 versicolor              5.94             2.77
## 3 virginica               6.59             2.97&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;summarise_if&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;summarise_if&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% group_by(Species) %&amp;gt;% 
  summarise_if(.predicate = function(x) is.numeric(x),
               .funs = funs(mean=&amp;quot;mean&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `funs()` is deprecated as of dplyr 0.8.0.
## Please use a list of either functions or lambdas: 
## 
##   # Simple named list: 
##   list(mean = mean, median = median)
## 
##   # Auto named with `tibble::lst()`: 
##   tibble::lst(mean, median)
## 
##   # Using lambdas
##   list(~ mean(., trim = .2), ~ median(., na.rm = TRUE))
## This warning is displayed once every 8 hours.
## Call `lifecycle::last_warnings()` to see where this warning was generated.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
##   Species   Sepal.Length_mean Sepal.Width_mean Petal.Length_me… Petal.Width_mean
##   &amp;lt;fct&amp;gt;                 &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1 setosa                 5.01             3.43             1.46            0.246
## 2 versicol…              5.94             2.77             4.26            1.33 
## 3 virginica              6.59             2.97             5.55            2.03&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;pass multiple functions&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% group_by(Species) %&amp;gt;% 
  summarise_if(.predicate = function(x) is.numeric(x),
               .funs = funs(mean=&amp;quot;mean&amp;quot;, Sd=&amp;quot;sd&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 9
##   Species Sepal.Length_me… Sepal.Width_mean Petal.Length_me… Petal.Width_mean
##   &amp;lt;fct&amp;gt;              &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1 setosa              5.01             3.43             1.46            0.246
## 2 versic…             5.94             2.77             4.26            1.33 
## 3 virgin…             6.59             2.97             5.55            2.03 
## # … with 4 more variables: Sepal.Length_Sd &amp;lt;dbl&amp;gt;, Sepal.Width_Sd &amp;lt;dbl&amp;gt;,
## #   Petal.Length_Sd &amp;lt;dbl&amp;gt;, Petal.Width_Sd &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How to install and load multiple packages at once?</title>
      <link>/post/multiplepkg/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/post/multiplepkg/</guid>
      <description>


&lt;style type=&#34;text/css&#34;&gt;
h2 { /* Header 2 */
    font-size: 22px;
  color: DarkBlue;
}
&lt;/style&gt;
&lt;div id=&#34;install-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;install packages&lt;/h2&gt;
&lt;p&gt;To install multiple packages with a single call to &lt;code&gt;install.packages&lt;/code&gt;, pass the names of the packages as a character vector to the install.packages() function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(c(&amp;quot;gganimate&amp;quot;, &amp;quot;tidyverse&amp;quot;, &amp;quot;gapminder&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;load-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;load packages&lt;/h2&gt;
&lt;p&gt;Once you have the packages installed, you can make their contents available to use in your current R session by running,&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lapply(c(&amp;quot;gganimate&amp;quot;, &amp;quot;tidyverse&amp;quot;, &amp;quot;gapminder&amp;quot;), require, character.only = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
## [1] TRUE
## 
## [[2]]
## [1] TRUE
## 
## [[3]]
## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;check-and-install-missing-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;check and install missing packages&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;list.of.packages &amp;lt;- c(&amp;quot;gganimate&amp;quot;, &amp;quot;tidyverse&amp;quot;, &amp;quot;gapminder&amp;quot;)
new.packages &amp;lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&amp;quot;Package&amp;quot;])]
if(length(new.packages)) install.packages(new.packages)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;for-other-alternatives-see&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;For other alternatives see&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;http://dirk.eddelbuettel.com/code/littler.html&#34;&gt;littler&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(littler)
install.r EIAdata gdata ggmap ggplot2 &lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/stevenworthington/3178163&#34;&gt;ipak&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ipak &amp;lt;- function(pkg){
    new.pkg &amp;lt;- pkg[!(pkg %in% installed.packages()[, &amp;quot;Package&amp;quot;])]
    if (length(new.pkg)) 
        install.packages(new.pkg, dependencies = TRUE)
    sapply(pkg, require, character.only = TRUE)
}

# usage
packages &amp;lt;- c(&amp;quot;gganimate&amp;quot;, &amp;quot;tidyverse&amp;quot;, &amp;quot;gapminder&amp;quot;)
ipak(packages)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## gganimate tidyverse gapminder 
##      TRUE      TRUE      TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/easypackages/README.html&#34;&gt;easypackages&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Some useful Greek letters you might use on your reports</title>
      <link>/post/greekletters/</link>
      <pubDate>Tue, 29 Jan 2019 00:00:00 +0000</pubDate>
      <guid>/post/greekletters/</guid>
      <description>


&lt;table&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;alpha&lt;/strong&gt;:&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;beta&lt;/strong&gt;:&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;gamma&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;delta&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\alpha&lt;/code&gt; : &lt;span class=&#34;math inline&#34;&gt;\(\alpha\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\beta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\gamma&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\gamma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\delta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\delta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Gamma&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\Gamma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Delta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\Delta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;epsilon&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Zeta&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;eta&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;theta&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\epsilon&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\epsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\zeta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\zeta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\eta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\eta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\theta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\varepsilon&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\varepsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Theta&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\Theta\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;iota&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;kappa&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;lambda&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;mu&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\iota&lt;/code&gt;: &lt;span class=&#34;math inline&#34;&gt;\(\iota\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\kappa:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\kappa\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\lambda:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\lambda\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\mu:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;nu&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;xi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;pi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;rho&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\nu:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\nu\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\xi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\xi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\pi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\rho:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\rho\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Xi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Xi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Pi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Pi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;strong&gt;sigma&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;upsilon&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;phi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;omicron&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;\sigma:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\upsilon:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\upsilon\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\phi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\omicron:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\omicron\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\Sigma:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Sigma\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Phi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Phi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;strong&gt;tau&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;chi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;psi&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Omega&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;\tau:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\tau\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\chi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\chi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\psi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\psi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\omega:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\omega\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Psi:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Psi\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Omega:&lt;/code&gt; &lt;span class=&#34;math inline&#34;&gt;\(\Omega\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s in a package?</title>
      <link>/post/packageinfo/</link>
      <pubDate>Fri, 05 Oct 2018 00:00:00 +0000</pubDate>
      <guid>/post/packageinfo/</guid>
      <description>


&lt;p&gt;Sometimes we need to view all the functions that are built into an R package.
This is done in the same way you would list variables in your workspace, using the &lt;code&gt;ls&lt;/code&gt; function. Note that the package must be loaded before you run the &lt;code&gt;ls&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt; Getting a list of functions inside the &lt;code&gt;dplyr&lt;/code&gt; package&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
ls(&amp;quot;package:dplyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [1] &amp;quot;%&amp;gt;%&amp;quot;                   &amp;quot;across&amp;quot;                &amp;quot;add_count&amp;quot;            
##   [4] &amp;quot;add_count_&amp;quot;            &amp;quot;add_row&amp;quot;               &amp;quot;add_rownames&amp;quot;         
##   [7] &amp;quot;add_tally&amp;quot;             &amp;quot;add_tally_&amp;quot;            &amp;quot;all_equal&amp;quot;            
##  [10] &amp;quot;all_of&amp;quot;                &amp;quot;all_vars&amp;quot;              &amp;quot;anti_join&amp;quot;            
##  [13] &amp;quot;any_of&amp;quot;                &amp;quot;any_vars&amp;quot;              &amp;quot;arrange&amp;quot;              
##  [16] &amp;quot;arrange_&amp;quot;              &amp;quot;arrange_all&amp;quot;           &amp;quot;arrange_at&amp;quot;           
##  [19] &amp;quot;arrange_if&amp;quot;            &amp;quot;as_data_frame&amp;quot;         &amp;quot;as_label&amp;quot;             
##  [22] &amp;quot;as_tibble&amp;quot;             &amp;quot;as.tbl&amp;quot;                &amp;quot;auto_copy&amp;quot;            
##  [25] &amp;quot;band_instruments&amp;quot;      &amp;quot;band_instruments2&amp;quot;     &amp;quot;band_members&amp;quot;         
##  [28] &amp;quot;bench_tbls&amp;quot;            &amp;quot;between&amp;quot;               &amp;quot;bind_cols&amp;quot;            
##  [31] &amp;quot;bind_rows&amp;quot;             &amp;quot;c_across&amp;quot;              &amp;quot;case_when&amp;quot;            
##  [34] &amp;quot;changes&amp;quot;               &amp;quot;check_dbplyr&amp;quot;          &amp;quot;coalesce&amp;quot;             
##  [37] &amp;quot;collapse&amp;quot;              &amp;quot;collect&amp;quot;               &amp;quot;combine&amp;quot;              
##  [40] &amp;quot;common_by&amp;quot;             &amp;quot;compare_tbls&amp;quot;          &amp;quot;compare_tbls2&amp;quot;        
##  [43] &amp;quot;compute&amp;quot;               &amp;quot;contains&amp;quot;              &amp;quot;copy_to&amp;quot;              
##  [46] &amp;quot;count&amp;quot;                 &amp;quot;count_&amp;quot;                &amp;quot;cumall&amp;quot;               
##  [49] &amp;quot;cumany&amp;quot;                &amp;quot;cume_dist&amp;quot;             &amp;quot;cummean&amp;quot;              
##  [52] &amp;quot;cur_column&amp;quot;            &amp;quot;cur_data&amp;quot;              &amp;quot;cur_data_all&amp;quot;         
##  [55] &amp;quot;cur_group&amp;quot;             &amp;quot;cur_group_id&amp;quot;          &amp;quot;cur_group_rows&amp;quot;       
##  [58] &amp;quot;current_vars&amp;quot;          &amp;quot;data_frame&amp;quot;            &amp;quot;data_frame_&amp;quot;          
##  [61] &amp;quot;db_analyze&amp;quot;            &amp;quot;db_begin&amp;quot;              &amp;quot;db_commit&amp;quot;            
##  [64] &amp;quot;db_create_index&amp;quot;       &amp;quot;db_create_indexes&amp;quot;     &amp;quot;db_create_table&amp;quot;      
##  [67] &amp;quot;db_data_type&amp;quot;          &amp;quot;db_desc&amp;quot;               &amp;quot;db_drop_table&amp;quot;        
##  [70] &amp;quot;db_explain&amp;quot;            &amp;quot;db_has_table&amp;quot;          &amp;quot;db_insert_into&amp;quot;       
##  [73] &amp;quot;db_list_tables&amp;quot;        &amp;quot;db_query_fields&amp;quot;       &amp;quot;db_query_rows&amp;quot;        
##  [76] &amp;quot;db_rollback&amp;quot;           &amp;quot;db_save_query&amp;quot;         &amp;quot;db_write_table&amp;quot;       
##  [79] &amp;quot;dense_rank&amp;quot;            &amp;quot;desc&amp;quot;                  &amp;quot;dim_desc&amp;quot;             
##  [82] &amp;quot;distinct&amp;quot;              &amp;quot;distinct_&amp;quot;             &amp;quot;distinct_all&amp;quot;         
##  [85] &amp;quot;distinct_at&amp;quot;           &amp;quot;distinct_if&amp;quot;           &amp;quot;distinct_prepare&amp;quot;     
##  [88] &amp;quot;do&amp;quot;                    &amp;quot;do_&amp;quot;                   &amp;quot;dplyr_col_modify&amp;quot;     
##  [91] &amp;quot;dplyr_reconstruct&amp;quot;     &amp;quot;dplyr_row_slice&amp;quot;       &amp;quot;ends_with&amp;quot;            
##  [94] &amp;quot;enexpr&amp;quot;                &amp;quot;enexprs&amp;quot;               &amp;quot;enquo&amp;quot;                
##  [97] &amp;quot;enquos&amp;quot;                &amp;quot;ensym&amp;quot;                 &amp;quot;ensyms&amp;quot;               
## [100] &amp;quot;eval_tbls&amp;quot;             &amp;quot;eval_tbls2&amp;quot;            &amp;quot;everything&amp;quot;           
## [103] &amp;quot;explain&amp;quot;               &amp;quot;expr&amp;quot;                  &amp;quot;failwith&amp;quot;             
## [106] &amp;quot;filter&amp;quot;                &amp;quot;filter_&amp;quot;               &amp;quot;filter_all&amp;quot;           
## [109] &amp;quot;filter_at&amp;quot;             &amp;quot;filter_if&amp;quot;             &amp;quot;first&amp;quot;                
## [112] &amp;quot;frame_data&amp;quot;            &amp;quot;full_join&amp;quot;             &amp;quot;funs&amp;quot;                 
## [115] &amp;quot;funs_&amp;quot;                 &amp;quot;glimpse&amp;quot;               &amp;quot;group_by&amp;quot;             
## [118] &amp;quot;group_by_&amp;quot;             &amp;quot;group_by_all&amp;quot;          &amp;quot;group_by_at&amp;quot;          
## [121] &amp;quot;group_by_drop_default&amp;quot; &amp;quot;group_by_if&amp;quot;           &amp;quot;group_by_prepare&amp;quot;     
## [124] &amp;quot;group_cols&amp;quot;            &amp;quot;group_data&amp;quot;            &amp;quot;group_indices&amp;quot;        
## [127] &amp;quot;group_indices_&amp;quot;        &amp;quot;group_keys&amp;quot;            &amp;quot;group_map&amp;quot;            
## [130] &amp;quot;group_modify&amp;quot;          &amp;quot;group_nest&amp;quot;            &amp;quot;group_rows&amp;quot;           
## [133] &amp;quot;group_size&amp;quot;            &amp;quot;group_split&amp;quot;           &amp;quot;group_trim&amp;quot;           
## [136] &amp;quot;group_vars&amp;quot;            &amp;quot;group_walk&amp;quot;            &amp;quot;grouped_df&amp;quot;           
## [139] &amp;quot;groups&amp;quot;                &amp;quot;id&amp;quot;                    &amp;quot;ident&amp;quot;                
## [142] &amp;quot;if_else&amp;quot;               &amp;quot;inner_join&amp;quot;            &amp;quot;intersect&amp;quot;            
## [145] &amp;quot;is_grouped_df&amp;quot;         &amp;quot;is.grouped_df&amp;quot;         &amp;quot;is.src&amp;quot;               
## [148] &amp;quot;is.tbl&amp;quot;                &amp;quot;lag&amp;quot;                   &amp;quot;last&amp;quot;                 
## [151] &amp;quot;last_col&amp;quot;              &amp;quot;lead&amp;quot;                  &amp;quot;left_join&amp;quot;            
## [154] &amp;quot;location&amp;quot;              &amp;quot;lst&amp;quot;                   &amp;quot;lst_&amp;quot;                 
## [157] &amp;quot;make_tbl&amp;quot;              &amp;quot;matches&amp;quot;               &amp;quot;min_rank&amp;quot;             
## [160] &amp;quot;mutate&amp;quot;                &amp;quot;mutate_&amp;quot;               &amp;quot;mutate_all&amp;quot;           
## [163] &amp;quot;mutate_at&amp;quot;             &amp;quot;mutate_each&amp;quot;           &amp;quot;mutate_each_&amp;quot;         
## [166] &amp;quot;mutate_if&amp;quot;             &amp;quot;n&amp;quot;                     &amp;quot;n_distinct&amp;quot;           
## [169] &amp;quot;n_groups&amp;quot;              &amp;quot;na_if&amp;quot;                 &amp;quot;near&amp;quot;                 
## [172] &amp;quot;nest_by&amp;quot;               &amp;quot;nest_join&amp;quot;             &amp;quot;new_grouped_df&amp;quot;       
## [175] &amp;quot;nth&amp;quot;                   &amp;quot;ntile&amp;quot;                 &amp;quot;num_range&amp;quot;            
## [178] &amp;quot;one_of&amp;quot;                &amp;quot;order_by&amp;quot;              &amp;quot;percent_rank&amp;quot;         
## [181] &amp;quot;progress_estimated&amp;quot;    &amp;quot;pull&amp;quot;                  &amp;quot;quo&amp;quot;                  
## [184] &amp;quot;quo_name&amp;quot;              &amp;quot;quos&amp;quot;                  &amp;quot;recode&amp;quot;               
## [187] &amp;quot;recode_factor&amp;quot;         &amp;quot;relocate&amp;quot;              &amp;quot;rename&amp;quot;               
## [190] &amp;quot;rename_&amp;quot;               &amp;quot;rename_all&amp;quot;            &amp;quot;rename_at&amp;quot;            
## [193] &amp;quot;rename_if&amp;quot;             &amp;quot;rename_vars&amp;quot;           &amp;quot;rename_vars_&amp;quot;         
## [196] &amp;quot;rename_with&amp;quot;           &amp;quot;right_join&amp;quot;            &amp;quot;row_number&amp;quot;           
## [199] &amp;quot;rows_delete&amp;quot;           &amp;quot;rows_insert&amp;quot;           &amp;quot;rows_patch&amp;quot;           
## [202] &amp;quot;rows_update&amp;quot;           &amp;quot;rows_upsert&amp;quot;           &amp;quot;rowwise&amp;quot;              
## [205] &amp;quot;same_src&amp;quot;              &amp;quot;sample_frac&amp;quot;           &amp;quot;sample_n&amp;quot;             
## [208] &amp;quot;select&amp;quot;                &amp;quot;select_&amp;quot;               &amp;quot;select_all&amp;quot;           
## [211] &amp;quot;select_at&amp;quot;             &amp;quot;select_if&amp;quot;             &amp;quot;select_var&amp;quot;           
## [214] &amp;quot;select_vars&amp;quot;           &amp;quot;select_vars_&amp;quot;          &amp;quot;semi_join&amp;quot;            
## [217] &amp;quot;setdiff&amp;quot;               &amp;quot;setequal&amp;quot;              &amp;quot;show_query&amp;quot;           
## [220] &amp;quot;slice&amp;quot;                 &amp;quot;slice_&amp;quot;                &amp;quot;slice_head&amp;quot;           
## [223] &amp;quot;slice_max&amp;quot;             &amp;quot;slice_min&amp;quot;             &amp;quot;slice_sample&amp;quot;         
## [226] &amp;quot;slice_tail&amp;quot;            &amp;quot;sql&amp;quot;                   &amp;quot;sql_escape_ident&amp;quot;     
## [229] &amp;quot;sql_escape_string&amp;quot;     &amp;quot;sql_join&amp;quot;              &amp;quot;sql_select&amp;quot;           
## [232] &amp;quot;sql_semi_join&amp;quot;         &amp;quot;sql_set_op&amp;quot;            &amp;quot;sql_subquery&amp;quot;         
## [235] &amp;quot;sql_translate_env&amp;quot;     &amp;quot;src&amp;quot;                   &amp;quot;src_df&amp;quot;               
## [238] &amp;quot;src_local&amp;quot;             &amp;quot;src_mysql&amp;quot;             &amp;quot;src_postgres&amp;quot;         
## [241] &amp;quot;src_sqlite&amp;quot;            &amp;quot;src_tbls&amp;quot;              &amp;quot;starts_with&amp;quot;          
## [244] &amp;quot;starwars&amp;quot;              &amp;quot;storms&amp;quot;                &amp;quot;summarise&amp;quot;            
## [247] &amp;quot;summarise_&amp;quot;            &amp;quot;summarise_all&amp;quot;         &amp;quot;summarise_at&amp;quot;         
## [250] &amp;quot;summarise_each&amp;quot;        &amp;quot;summarise_each_&amp;quot;       &amp;quot;summarise_if&amp;quot;         
## [253] &amp;quot;summarize&amp;quot;             &amp;quot;summarize_&amp;quot;            &amp;quot;summarize_all&amp;quot;        
## [256] &amp;quot;summarize_at&amp;quot;          &amp;quot;summarize_each&amp;quot;        &amp;quot;summarize_each_&amp;quot;      
## [259] &amp;quot;summarize_if&amp;quot;          &amp;quot;sym&amp;quot;                   &amp;quot;syms&amp;quot;                 
## [262] &amp;quot;tally&amp;quot;                 &amp;quot;tally_&amp;quot;                &amp;quot;tbl&amp;quot;                  
## [265] &amp;quot;tbl_df&amp;quot;                &amp;quot;tbl_nongroup_vars&amp;quot;     &amp;quot;tbl_ptype&amp;quot;            
## [268] &amp;quot;tbl_sum&amp;quot;               &amp;quot;tbl_vars&amp;quot;              &amp;quot;tibble&amp;quot;               
## [271] &amp;quot;top_frac&amp;quot;              &amp;quot;top_n&amp;quot;                 &amp;quot;transmute&amp;quot;            
## [274] &amp;quot;transmute_&amp;quot;            &amp;quot;transmute_all&amp;quot;         &amp;quot;transmute_at&amp;quot;         
## [277] &amp;quot;transmute_if&amp;quot;          &amp;quot;tribble&amp;quot;               &amp;quot;trunc_mat&amp;quot;            
## [280] &amp;quot;type_sum&amp;quot;              &amp;quot;ungroup&amp;quot;               &amp;quot;union&amp;quot;                
## [283] &amp;quot;union_all&amp;quot;             &amp;quot;validate_grouped_df&amp;quot;   &amp;quot;vars&amp;quot;                 
## [286] &amp;quot;with_groups&amp;quot;           &amp;quot;with_order&amp;quot;            &amp;quot;wrap_dbplyr_obj&amp;quot;&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Customizing boxplots with ggplot2</title>
      <link>/post/blog/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      <guid>/post/blog/</guid>
      <description>


&lt;p&gt;Boxplot is probably one of the most common type of graphics. This will show how to customize boxplots.&lt;/p&gt;
&lt;p&gt;You will learn,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;how to change the order of labels&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;how to change the colours&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;how to flip coordinates&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Step 1: we create a simple data set.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Gender &amp;lt;- rep(c(&amp;quot;Male&amp;quot;, &amp;quot;Female&amp;quot;), times = 3, each = 4)
Quality &amp;lt;- rep(c(&amp;quot;Taste&amp;quot;, &amp;quot;Color of package&amp;quot;, &amp;quot;Capacity&amp;quot;), times = 1, each = 8)
Accepted &amp;lt;- seq(0, 100, by = 100/23)

DF &amp;lt;- data.frame(Gender, Quality, Accepted)
head(DF)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Gender Quality  Accepted
## 1   Male   Taste  0.000000
## 2   Male   Taste  4.347826
## 3   Male   Taste  8.695652
## 4   Male   Taste 13.043478
## 5 Female   Taste 17.391304
## 6 Female   Taste 21.739130&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Step 2: Generate a simple boxplot with ggplot&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
ggplot(DF, aes(x = Quality, y = Accepted, fill = Gender)) +
  geom_boxplot() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/boxplot_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Step 3: Change the colours, legend position and x-axis order&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(DF, aes(x = Quality, y = Accepted, fill = Gender)) +
  geom_boxplot() +
  scale_fill_manual(values = c(&amp;quot;green&amp;quot;, &amp;quot;orange&amp;quot;)) +
  xlab(&amp;quot;&amp;quot;) +
  theme(legend.position = &amp;quot;top&amp;quot;, legend.title = element_blank()) + 
  scale_x_discrete(limits=c(&amp;quot;Taste&amp;quot;, &amp;quot;Color of package&amp;quot;, &amp;quot;Capacity&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/boxplot_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Step 4: Change the plotting order: first you have to include &lt;code&gt;factor&lt;/code&gt; code to set the order of the levels.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DF$Gender_factor &amp;lt;- factor(DF$Gender, levels=c(&amp;quot;Male&amp;quot;, &amp;quot;Female&amp;quot;))
ggplot(DF, aes(x = Quality, y = Accepted, fill = Gender_factor)) +
  geom_boxplot() +
  scale_fill_manual(values = c(&amp;quot;green&amp;quot;, &amp;quot;orange&amp;quot;)) +
  xlab(&amp;quot;&amp;quot;) +
  theme(legend.position = &amp;quot;top&amp;quot;, legend.title = element_blank()) + 
  scale_x_discrete(limits=c(&amp;quot;Taste&amp;quot;, &amp;quot;Color of package&amp;quot;, &amp;quot;Capacity&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/boxplot_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Step 5: Horizontal bar chart: coord_flip()&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(DF, aes(x = Quality, y = Accepted, fill = Gender)) +
  geom_boxplot() +
  scale_fill_manual(values = c(&amp;quot;green&amp;quot;, &amp;quot;orange&amp;quot;)) +
  xlab(&amp;quot;&amp;quot;) +
  theme(legend.position = &amp;quot;top&amp;quot;, legend.title = element_blank()) + 
  coord_flip()+
  scale_x_discrete(limits=c(&amp;quot;Taste&amp;quot;, &amp;quot;Color of package&amp;quot;, &amp;quot;Capacity&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/boxplot_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;step 6: Change the legend order similar to plot order: under themes &lt;code&gt;fill=guide_legend(reverse=FALSE)&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(DF, aes(x = Quality, y = Accepted, fill = Gender)) +
  geom_boxplot() +
  scale_fill_manual(values = c(&amp;quot;green&amp;quot;, &amp;quot;orange&amp;quot;)) +
  xlab(&amp;quot;&amp;quot;) +
  theme(legend.position = &amp;quot;top&amp;quot;, legend.title = element_blank()) + 
  guides(fill=guide_legend(reverse=TRUE)) +
  coord_flip()+
  scale_x_discrete(limits=c(&amp;quot;Taste&amp;quot;, &amp;quot;Color of package&amp;quot;, &amp;quot;Capacity&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/boxplot_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Parallel computing with R</title>
      <link>/post/parallelcomputing/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0530</pubDate>
      <guid>/post/parallelcomputing/</guid>
      <description>&lt;p&gt;Working on this..&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data Types in R</title>
      <link>/post/datatypes/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0530</pubDate>
      <guid>/post/datatypes/</guid>
      <description>&lt;p&gt;coming up soon!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
